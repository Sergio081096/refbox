// Generated by gencpp from file simulator/ClearKDB.msg
// DO NOT EDIT!


#ifndef SIMULATOR_MESSAGE_CLEARKDB_H
#define SIMULATOR_MESSAGE_CLEARKDB_H

#include <ros/service_traits.h>


#include <simulator/ClearKDBRequest.h>
#include <simulator/ClearKDBResponse.h>


namespace simulator
{

struct ClearKDB
{

typedef ClearKDBRequest Request;
typedef ClearKDBResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ClearKDB
} // namespace simulator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::simulator::ClearKDB > {
  static const char* value()
  {
    return "c0cba2f76fe2be4cac55cc053705feaa";
  }

  static const char* value(const ::simulator::ClearKDB&) { return value(); }
};

template<>
struct DataType< ::simulator::ClearKDB > {
  static const char* value()
  {
    return "simulator/ClearKDB";
  }

  static const char* value(const ::simulator::ClearKDB&) { return value(); }
};


// service_traits::MD5Sum< ::simulator::ClearKDBRequest> should match
// service_traits::MD5Sum< ::simulator::ClearKDB >
template<>
struct MD5Sum< ::simulator::ClearKDBRequest>
{
  static const char* value()
  {
    return MD5Sum< ::simulator::ClearKDB >::value();
  }
  static const char* value(const ::simulator::ClearKDBRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::simulator::ClearKDBRequest> should match
// service_traits::DataType< ::simulator::ClearKDB >
template<>
struct DataType< ::simulator::ClearKDBRequest>
{
  static const char* value()
  {
    return DataType< ::simulator::ClearKDB >::value();
  }
  static const char* value(const ::simulator::ClearKDBRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::simulator::ClearKDBResponse> should match
// service_traits::MD5Sum< ::simulator::ClearKDB >
template<>
struct MD5Sum< ::simulator::ClearKDBResponse>
{
  static const char* value()
  {
    return MD5Sum< ::simulator::ClearKDB >::value();
  }
  static const char* value(const ::simulator::ClearKDBResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::simulator::ClearKDBResponse> should match
// service_traits::DataType< ::simulator::ClearKDB >
template<>
struct DataType< ::simulator::ClearKDBResponse>
{
  static const char* value()
  {
    return DataType< ::simulator::ClearKDB >::value();
  }
  static const char* value(const ::simulator::ClearKDBResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SIMULATOR_MESSAGE_CLEARKDB_H
