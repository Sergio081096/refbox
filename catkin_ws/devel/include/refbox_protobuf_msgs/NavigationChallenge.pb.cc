// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NavigationChallenge.proto

#include "NavigationChallenge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_NavigationChallenge_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_NavigationChallenge_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Route;
}  // namespace protobuf_NavigationChallenge_2eproto
namespace llsf_msgs {
class RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Route>
      _instance;
} _Route_default_instance_;
class NavigationRoutesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NavigationRoutes>
      _instance;
} _NavigationRoutes_default_instance_;
}  // namespace llsf_msgs
namespace protobuf_NavigationChallenge_2eproto {
static void InitDefaultsRoute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_Route_default_instance_;
    new (ptr) ::llsf_msgs::Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::Route::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Route =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoute}, {}};

static void InitDefaultsNavigationRoutes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_NavigationRoutes_default_instance_;
    new (ptr) ::llsf_msgs::NavigationRoutes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::NavigationRoutes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NavigationRoutes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNavigationRoutes}, {
      &protobuf_NavigationChallenge_2eproto::scc_info_Route.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Route.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NavigationRoutes.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Route, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Route, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Route, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Route, route_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Route, reached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Route, remaining_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::NavigationRoutes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::NavigationRoutes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::NavigationRoutes, team_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::NavigationRoutes, routes_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::llsf_msgs::Route)},
  { 13, 20, sizeof(::llsf_msgs::NavigationRoutes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_NavigationRoutes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "NavigationChallenge.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031NavigationChallenge.proto\022\tllsf_msgs\032\n"
      "Team.proto\032\nZone.proto\"y\n\005Route\022\n\n\002id\030\001 "
      "\002(\r\022\036\n\005route\030\002 \003(\0162\017.llsf_msgs.Zone\022 \n\007r"
      "eached\030\003 \003(\0162\017.llsf_msgs.Zone\022\"\n\tremaini"
      "ng\030\004 \003(\0162\017.llsf_msgs.Zone\"\202\001\n\020Navigation"
      "Routes\022#\n\nteam_color\030\001 \002(\0162\017.llsf_msgs.T"
      "eam\022 \n\006routes\030\005 \003(\0132\020.llsf_msgs.Route\"\'\n"
      "\010CompType\022\014\n\007COMP_ID\020\320\017\022\r\n\010MSG_TYPE\020\372\001B<"
      "\n\037org.robocup_logistics.llsf_msgsB\031Navig"
      "ationChallengeProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 380);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NavigationChallenge.proto", &protobuf_RegisterTypes);
  ::protobuf_Team_2eproto::AddDescriptors();
  ::protobuf_Zone_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_NavigationChallenge_2eproto
namespace llsf_msgs {
const ::google::protobuf::EnumDescriptor* NavigationRoutes_CompType_descriptor() {
  protobuf_NavigationChallenge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NavigationChallenge_2eproto::file_level_enum_descriptors[0];
}
bool NavigationRoutes_CompType_IsValid(int value) {
  switch (value) {
    case 250:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NavigationRoutes_CompType NavigationRoutes::COMP_ID;
const NavigationRoutes_CompType NavigationRoutes::MSG_TYPE;
const NavigationRoutes_CompType NavigationRoutes::CompType_MIN;
const NavigationRoutes_CompType NavigationRoutes::CompType_MAX;
const int NavigationRoutes::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Route::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Route::kIdFieldNumber;
const int Route::kRouteFieldNumber;
const int Route::kReachedFieldNumber;
const int Route::kRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Route::Route()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_NavigationChallenge_2eproto::scc_info_Route.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.Route)
}
Route::Route(const Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      route_(from.route_),
      reached_(from.reached_),
      remaining_(from.remaining_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.Route)
}

void Route::SharedCtor() {
  id_ = 0u;
}

Route::~Route() {
  // @@protoc_insertion_point(destructor:llsf_msgs.Route)
  SharedDtor();
}

void Route::SharedDtor() {
}

void Route::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Route::descriptor() {
  ::protobuf_NavigationChallenge_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NavigationChallenge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Route& Route::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_NavigationChallenge_2eproto::scc_info_Route.base);
  return *internal_default_instance();
}


void Route::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_.Clear();
  reached_.Clear();
  remaining_.Clear();
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.Route)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.Zone route = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Zone_IsValid(value)) {
            add_route(static_cast< ::llsf_msgs::Zone >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::llsf_msgs::Zone_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_route())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.Zone reached = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Zone_IsValid(value)) {
            add_reached(static_cast< ::llsf_msgs::Zone >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 3,
                 ::llsf_msgs::Zone_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_reached())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.Zone remaining = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Zone_IsValid(value)) {
            add_remaining(static_cast< ::llsf_msgs::Zone >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::llsf_msgs::Zone_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_remaining())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.Route)
  return false;
#undef DO_
}

void Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .llsf_msgs.Zone route = 2;
  for (int i = 0, n = this->route_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->route(i), output);
  }

  // repeated .llsf_msgs.Zone reached = 3;
  for (int i = 0, n = this->reached_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reached(i), output);
  }

  // repeated .llsf_msgs.Zone remaining = 4;
  for (int i = 0, n = this->remaining_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->remaining(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.Route)
}

::google::protobuf::uint8* Route::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .llsf_msgs.Zone route = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->route_, target);

  // repeated .llsf_msgs.Zone reached = 3;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    3, this->reached_, target);

  // repeated .llsf_msgs.Zone remaining = 4;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    4, this->remaining_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.Route)
  return target;
}

size_t Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.Route)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  // repeated .llsf_msgs.Zone route = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->route_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->route(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .llsf_msgs.Zone reached = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->reached_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->reached(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .llsf_msgs.Zone remaining = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->remaining_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->remaining(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.Route)
  GOOGLE_DCHECK_NE(&from, this);
  const Route* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Route>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.Route)
    MergeFrom(*source);
  }
}

void Route::MergeFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  route_.MergeFrom(from.route_);
  reached_.MergeFrom(from.reached_);
  remaining_.MergeFrom(from.remaining_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Route::CopyFrom(const Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Route::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Route::Swap(Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Route::InternalSwap(Route* other) {
  using std::swap;
  route_.InternalSwap(&other->route_);
  reached_.InternalSwap(&other->reached_);
  remaining_.InternalSwap(&other->remaining_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Route::GetMetadata() const {
  protobuf_NavigationChallenge_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NavigationChallenge_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NavigationRoutes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavigationRoutes::kTeamColorFieldNumber;
const int NavigationRoutes::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavigationRoutes::NavigationRoutes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_NavigationChallenge_2eproto::scc_info_NavigationRoutes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.NavigationRoutes)
}
NavigationRoutes::NavigationRoutes(const NavigationRoutes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      routes_(from.routes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_color_ = from.team_color_;
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.NavigationRoutes)
}

void NavigationRoutes::SharedCtor() {
  team_color_ = 0;
}

NavigationRoutes::~NavigationRoutes() {
  // @@protoc_insertion_point(destructor:llsf_msgs.NavigationRoutes)
  SharedDtor();
}

void NavigationRoutes::SharedDtor() {
}

void NavigationRoutes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NavigationRoutes::descriptor() {
  ::protobuf_NavigationChallenge_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NavigationChallenge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NavigationRoutes& NavigationRoutes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_NavigationChallenge_2eproto::scc_info_NavigationRoutes.base);
  return *internal_default_instance();
}


void NavigationRoutes::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.NavigationRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  team_color_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NavigationRoutes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.NavigationRoutes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .llsf_msgs.Team team_color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Team_IsValid(value)) {
            set_team_color(static_cast< ::llsf_msgs::Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.Route routes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.NavigationRoutes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.NavigationRoutes)
  return false;
#undef DO_
}

void NavigationRoutes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.NavigationRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.Team team_color = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->team_color(), output);
  }

  // repeated .llsf_msgs.Route routes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->routes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.NavigationRoutes)
}

::google::protobuf::uint8* NavigationRoutes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.NavigationRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.Team team_color = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->team_color(), target);
  }

  // repeated .llsf_msgs.Route routes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->routes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.NavigationRoutes)
  return target;
}

size_t NavigationRoutes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.NavigationRoutes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .llsf_msgs.Team team_color = 1;
  if (has_team_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());
  }
  // repeated .llsf_msgs.Route routes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NavigationRoutes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.NavigationRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  const NavigationRoutes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NavigationRoutes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.NavigationRoutes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.NavigationRoutes)
    MergeFrom(*source);
  }
}

void NavigationRoutes::MergeFrom(const NavigationRoutes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.NavigationRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  if (from.has_team_color()) {
    set_team_color(from.team_color());
  }
}

void NavigationRoutes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.NavigationRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavigationRoutes::CopyFrom(const NavigationRoutes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.NavigationRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavigationRoutes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->routes())) return false;
  return true;
}

void NavigationRoutes::Swap(NavigationRoutes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavigationRoutes::InternalSwap(NavigationRoutes* other) {
  using std::swap;
  CastToBase(&routes_)->InternalSwap(CastToBase(&other->routes_));
  swap(team_color_, other->team_color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NavigationRoutes::GetMetadata() const {
  protobuf_NavigationChallenge_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NavigationChallenge_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::Route* Arena::CreateMaybeMessage< ::llsf_msgs::Route >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::Route >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::NavigationRoutes* Arena::CreateMaybeMessage< ::llsf_msgs::NavigationRoutes >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::NavigationRoutes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
