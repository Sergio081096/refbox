// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AgentTask.proto

#include "AgentTask.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_AgentTask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AgentTask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BufferStation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AgentTask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Deliver;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AgentTask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExploreWaypoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AgentTask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Move;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AgentTask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Retrieve;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AgentTask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkpieceDescription;
}  // namespace protobuf_AgentTask_2eproto
namespace llsf_msgs {
class AgentTaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgentTask>
      _instance;
} _AgentTask_default_instance_;
class MoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Move>
      _instance;
} _Move_default_instance_;
class RetrieveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Retrieve>
      _instance;
} _Retrieve_default_instance_;
class DeliverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Deliver>
      _instance;
} _Deliver_default_instance_;
class BufferStationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BufferStation>
      _instance;
} _BufferStation_default_instance_;
class ExploreWaypointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExploreWaypoint>
      _instance;
} _ExploreWaypoint_default_instance_;
class WorkpieceDescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkpieceDescription>
      _instance;
} _WorkpieceDescription_default_instance_;
}  // namespace llsf_msgs
namespace protobuf_AgentTask_2eproto {
static void InitDefaultsAgentTask() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_AgentTask_default_instance_;
    new (ptr) ::llsf_msgs::AgentTask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::AgentTask::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_AgentTask =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsAgentTask}, {
      &protobuf_AgentTask_2eproto::scc_info_Move.base,
      &protobuf_AgentTask_2eproto::scc_info_Retrieve.base,
      &protobuf_AgentTask_2eproto::scc_info_Deliver.base,
      &protobuf_AgentTask_2eproto::scc_info_BufferStation.base,
      &protobuf_AgentTask_2eproto::scc_info_ExploreWaypoint.base,
      &protobuf_AgentTask_2eproto::scc_info_WorkpieceDescription.base,}};

static void InitDefaultsMove() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_Move_default_instance_;
    new (ptr) ::llsf_msgs::Move();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::Move::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Move =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMove}, {}};

static void InitDefaultsRetrieve() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_Retrieve_default_instance_;
    new (ptr) ::llsf_msgs::Retrieve();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::Retrieve::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Retrieve =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRetrieve}, {}};

static void InitDefaultsDeliver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_Deliver_default_instance_;
    new (ptr) ::llsf_msgs::Deliver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::Deliver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Deliver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeliver}, {}};

static void InitDefaultsBufferStation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_BufferStation_default_instance_;
    new (ptr) ::llsf_msgs::BufferStation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::BufferStation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BufferStation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBufferStation}, {}};

static void InitDefaultsExploreWaypoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_ExploreWaypoint_default_instance_;
    new (ptr) ::llsf_msgs::ExploreWaypoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::ExploreWaypoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExploreWaypoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExploreWaypoint}, {}};

static void InitDefaultsWorkpieceDescription() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_WorkpieceDescription_default_instance_;
    new (ptr) ::llsf_msgs::WorkpieceDescription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::WorkpieceDescription::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkpieceDescription =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkpieceDescription}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AgentTask.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Move.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Retrieve.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Deliver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BufferStation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExploreWaypoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkpieceDescription.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, team_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, robot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, move_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, retrieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, deliver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, explore_machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, workpiece_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, cancel_task_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, pause_task_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, successful_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, canceled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AgentTask, error_code_),
  6,
  7,
  8,
  0,
  1,
  2,
  3,
  4,
  5,
  9,
  10,
  11,
  12,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Move, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Move, waypoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Move, machine_point_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Retrieve, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Retrieve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Retrieve, machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Retrieve, machine_point_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Deliver, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Deliver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Deliver, machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Deliver, machine_point_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::BufferStation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::BufferStation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::BufferStation, machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::BufferStation, shelf_number_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ExploreWaypoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ExploreWaypoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ExploreWaypoint, machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ExploreWaypoint, machine_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ExploreWaypoint, waypoint_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::WorkpieceDescription, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::WorkpieceDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::WorkpieceDescription, base_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::WorkpieceDescription, ring_colors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::WorkpieceDescription, cap_color_),
  0,
  ~0u,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 20, sizeof(::llsf_msgs::AgentTask)},
  { 35, 42, sizeof(::llsf_msgs::Move)},
  { 44, 51, sizeof(::llsf_msgs::Retrieve)},
  { 53, 60, sizeof(::llsf_msgs::Deliver)},
  { 62, 69, sizeof(::llsf_msgs::BufferStation)},
  { 71, 79, sizeof(::llsf_msgs::ExploreWaypoint)},
  { 82, 90, sizeof(::llsf_msgs::WorkpieceDescription)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_AgentTask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_Retrieve_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_Deliver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_BufferStation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_ExploreWaypoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_WorkpieceDescription_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "AgentTask.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017AgentTask.proto\022\tllsf_msgs\032\nTeam.proto"
      "\032\022ProductColor.proto\"\373\003\n\tAgentTask\022#\n\nte"
      "am_color\030\001 \002(\0162\017.llsf_msgs.Team\022\017\n\007task_"
      "id\030\002 \002(\r\022\020\n\010robot_id\030\003 \002(\r\022\035\n\004move\030\004 \001(\013"
      "2\017.llsf_msgs.Move\022%\n\010retrieve\030\005 \001(\0132\023.ll"
      "sf_msgs.Retrieve\022#\n\007deliver\030\006 \001(\0132\022.llsf"
      "_msgs.Deliver\022(\n\006buffer\030\007 \001(\0132\030.llsf_msg"
      "s.BufferStation\0223\n\017explore_machine\030\010 \001(\013"
      "2\032.llsf_msgs.ExploreWaypoint\022>\n\025workpiec"
      "e_description\030\t \001(\0132\037.llsf_msgs.Workpiec"
      "eDescription\022\020\n\010order_id\030\n \001(\r\022\023\n\013cancel"
      "_task\030\013 \001(\010\022\022\n\npause_task\030\014 \001(\010\022\022\n\nsucce"
      "ssful\030\r \001(\010\022\020\n\010canceled\030\016 \001(\010\022\022\n\nerror_c"
      "ode\030\017 \001(\r\"\'\n\010CompType\022\014\n\007COMP_ID\020\300>\022\r\n\010M"
      "SG_TYPE\020\366\003\"/\n\004Move\022\020\n\010waypoint\030\001 \002(\t\022\025\n\r"
      "machine_point\030\002 \001(\t\"5\n\010Retrieve\022\022\n\nmachi"
      "ne_id\030\001 \002(\t\022\025\n\rmachine_point\030\002 \002(\t\"4\n\007De"
      "liver\022\022\n\nmachine_id\030\001 \002(\t\022\025\n\rmachine_poi"
      "nt\030\002 \002(\t\"9\n\rBufferStation\022\022\n\nmachine_id\030"
      "\001 \002(\t\022\024\n\014shelf_number\030\002 \002(\r\"N\n\017ExploreWa"
      "ypoint\022\022\n\nmachine_id\030\001 \002(\t\022\025\n\rmachine_po"
      "int\030\002 \002(\t\022\020\n\010waypoint\030\003 \002(\t\"\274\001\n\024Workpiec"
      "eDescription\022(\n\nbase_color\030\003 \002(\0162\024.llsf_"
      "msgs.BaseColor\022)\n\013ring_colors\030\004 \003(\0162\024.ll"
      "sf_msgs.RingColor\022&\n\tcap_color\030\005 \001(\0162\023.l"
      "lsf_msgs.CapColor\"\'\n\010CompType\022\014\n\007COMP_ID"
      "\020\300>\022\r\n\010MSG_TYPE\020\376\003B3\n\037org.robocup_logist"
      "ics.llsf_msgsB\020AgentTasksProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AgentTask.proto", &protobuf_RegisterTypes);
  ::protobuf_Team_2eproto::AddDescriptors();
  ::protobuf_ProductColor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AgentTask_2eproto
namespace llsf_msgs {
const ::google::protobuf::EnumDescriptor* AgentTask_CompType_descriptor() {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AgentTask_2eproto::file_level_enum_descriptors[0];
}
bool AgentTask_CompType_IsValid(int value) {
  switch (value) {
    case 502:
    case 8000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AgentTask_CompType AgentTask::COMP_ID;
const AgentTask_CompType AgentTask::MSG_TYPE;
const AgentTask_CompType AgentTask::CompType_MIN;
const AgentTask_CompType AgentTask::CompType_MAX;
const int AgentTask::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorkpieceDescription_CompType_descriptor() {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AgentTask_2eproto::file_level_enum_descriptors[1];
}
bool WorkpieceDescription_CompType_IsValid(int value) {
  switch (value) {
    case 510:
    case 8000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorkpieceDescription_CompType WorkpieceDescription::COMP_ID;
const WorkpieceDescription_CompType WorkpieceDescription::MSG_TYPE;
const WorkpieceDescription_CompType WorkpieceDescription::CompType_MIN;
const WorkpieceDescription_CompType WorkpieceDescription::CompType_MAX;
const int WorkpieceDescription::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AgentTask::InitAsDefaultInstance() {
  ::llsf_msgs::_AgentTask_default_instance_._instance.get_mutable()->move_ = const_cast< ::llsf_msgs::Move*>(
      ::llsf_msgs::Move::internal_default_instance());
  ::llsf_msgs::_AgentTask_default_instance_._instance.get_mutable()->retrieve_ = const_cast< ::llsf_msgs::Retrieve*>(
      ::llsf_msgs::Retrieve::internal_default_instance());
  ::llsf_msgs::_AgentTask_default_instance_._instance.get_mutable()->deliver_ = const_cast< ::llsf_msgs::Deliver*>(
      ::llsf_msgs::Deliver::internal_default_instance());
  ::llsf_msgs::_AgentTask_default_instance_._instance.get_mutable()->buffer_ = const_cast< ::llsf_msgs::BufferStation*>(
      ::llsf_msgs::BufferStation::internal_default_instance());
  ::llsf_msgs::_AgentTask_default_instance_._instance.get_mutable()->explore_machine_ = const_cast< ::llsf_msgs::ExploreWaypoint*>(
      ::llsf_msgs::ExploreWaypoint::internal_default_instance());
  ::llsf_msgs::_AgentTask_default_instance_._instance.get_mutable()->workpiece_description_ = const_cast< ::llsf_msgs::WorkpieceDescription*>(
      ::llsf_msgs::WorkpieceDescription::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgentTask::kTeamColorFieldNumber;
const int AgentTask::kTaskIdFieldNumber;
const int AgentTask::kRobotIdFieldNumber;
const int AgentTask::kMoveFieldNumber;
const int AgentTask::kRetrieveFieldNumber;
const int AgentTask::kDeliverFieldNumber;
const int AgentTask::kBufferFieldNumber;
const int AgentTask::kExploreMachineFieldNumber;
const int AgentTask::kWorkpieceDescriptionFieldNumber;
const int AgentTask::kOrderIdFieldNumber;
const int AgentTask::kCancelTaskFieldNumber;
const int AgentTask::kPauseTaskFieldNumber;
const int AgentTask::kSuccessfulFieldNumber;
const int AgentTask::kCanceledFieldNumber;
const int AgentTask::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgentTask::AgentTask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_AgentTask.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.AgentTask)
}
AgentTask::AgentTask(const AgentTask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_move()) {
    move_ = new ::llsf_msgs::Move(*from.move_);
  } else {
    move_ = NULL;
  }
  if (from.has_retrieve()) {
    retrieve_ = new ::llsf_msgs::Retrieve(*from.retrieve_);
  } else {
    retrieve_ = NULL;
  }
  if (from.has_deliver()) {
    deliver_ = new ::llsf_msgs::Deliver(*from.deliver_);
  } else {
    deliver_ = NULL;
  }
  if (from.has_buffer()) {
    buffer_ = new ::llsf_msgs::BufferStation(*from.buffer_);
  } else {
    buffer_ = NULL;
  }
  if (from.has_explore_machine()) {
    explore_machine_ = new ::llsf_msgs::ExploreWaypoint(*from.explore_machine_);
  } else {
    explore_machine_ = NULL;
  }
  if (from.has_workpiece_description()) {
    workpiece_description_ = new ::llsf_msgs::WorkpieceDescription(*from.workpiece_description_);
  } else {
    workpiece_description_ = NULL;
  }
  ::memcpy(&team_color_, &from.team_color_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&team_color_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.AgentTask)
}

void AgentTask::SharedCtor() {
  ::memset(&move_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&move_)) + sizeof(error_code_));
}

AgentTask::~AgentTask() {
  // @@protoc_insertion_point(destructor:llsf_msgs.AgentTask)
  SharedDtor();
}

void AgentTask::SharedDtor() {
  if (this != internal_default_instance()) delete move_;
  if (this != internal_default_instance()) delete retrieve_;
  if (this != internal_default_instance()) delete deliver_;
  if (this != internal_default_instance()) delete buffer_;
  if (this != internal_default_instance()) delete explore_machine_;
  if (this != internal_default_instance()) delete workpiece_description_;
}

void AgentTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AgentTask::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgentTask& AgentTask::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_AgentTask.base);
  return *internal_default_instance();
}


void AgentTask::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.AgentTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(move_ != NULL);
      move_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(retrieve_ != NULL);
      retrieve_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(deliver_ != NULL);
      deliver_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(buffer_ != NULL);
      buffer_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(explore_machine_ != NULL);
      explore_machine_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(workpiece_description_ != NULL);
      workpiece_description_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&team_color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&task_id_) -
        reinterpret_cast<char*>(&team_color_)) + sizeof(task_id_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&robot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&error_code_) -
        reinterpret_cast<char*>(&robot_id_)) + sizeof(error_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AgentTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.AgentTask)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .llsf_msgs.Team team_color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Team_IsValid(value)) {
            set_team_color(static_cast< ::llsf_msgs::Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 task_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_task_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 robot_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_robot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &robot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.Move move = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.Retrieve retrieve = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retrieve()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.Deliver deliver = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deliver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.BufferStation buffer = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.ExploreWaypoint explore_machine = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_explore_machine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.WorkpieceDescription workpiece_description = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_workpiece_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 order_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_order_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool cancel_task = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_cancel_task();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancel_task_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pause_task = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_pause_task();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pause_task_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool successful = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_successful();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &successful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool canceled = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_canceled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canceled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 error_code = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.AgentTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.AgentTask)
  return false;
#undef DO_
}

void AgentTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.AgentTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.Team team_color = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->team_color(), output);
  }

  // required uint32 task_id = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->task_id(), output);
  }

  // required uint32 robot_id = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->robot_id(), output);
  }

  // optional .llsf_msgs.Move move = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_move(), output);
  }

  // optional .llsf_msgs.Retrieve retrieve = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_retrieve(), output);
  }

  // optional .llsf_msgs.Deliver deliver = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_deliver(), output);
  }

  // optional .llsf_msgs.BufferStation buffer = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_buffer(), output);
  }

  // optional .llsf_msgs.ExploreWaypoint explore_machine = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_explore_machine(), output);
  }

  // optional .llsf_msgs.WorkpieceDescription workpiece_description = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_workpiece_description(), output);
  }

  // optional uint32 order_id = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->order_id(), output);
  }

  // optional bool cancel_task = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->cancel_task(), output);
  }

  // optional bool pause_task = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->pause_task(), output);
  }

  // optional bool successful = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->successful(), output);
  }

  // optional bool canceled = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->canceled(), output);
  }

  // optional uint32 error_code = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.AgentTask)
}

::google::protobuf::uint8* AgentTask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.AgentTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.Team team_color = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->team_color(), target);
  }

  // required uint32 task_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->task_id(), target);
  }

  // required uint32 robot_id = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->robot_id(), target);
  }

  // optional .llsf_msgs.Move move = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_move(), deterministic, target);
  }

  // optional .llsf_msgs.Retrieve retrieve = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_retrieve(), deterministic, target);
  }

  // optional .llsf_msgs.Deliver deliver = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_deliver(), deterministic, target);
  }

  // optional .llsf_msgs.BufferStation buffer = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_buffer(), deterministic, target);
  }

  // optional .llsf_msgs.ExploreWaypoint explore_machine = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_explore_machine(), deterministic, target);
  }

  // optional .llsf_msgs.WorkpieceDescription workpiece_description = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_workpiece_description(), deterministic, target);
  }

  // optional uint32 order_id = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->order_id(), target);
  }

  // optional bool cancel_task = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->cancel_task(), target);
  }

  // optional bool pause_task = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->pause_task(), target);
  }

  // optional bool successful = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->successful(), target);
  }

  // optional bool canceled = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->canceled(), target);
  }

  // optional uint32 error_code = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.AgentTask)
  return target;
}

size_t AgentTask::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.AgentTask)
  size_t total_size = 0;

  if (has_team_color()) {
    // required .llsf_msgs.Team team_color = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());
  }

  if (has_task_id()) {
    // required uint32 task_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());
  }

  if (has_robot_id()) {
    // required uint32 robot_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->robot_id());
  }

  return total_size;
}
size_t AgentTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.AgentTask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001c0) ^ 0x000001c0) == 0) {  // All required fields are present.
    // required .llsf_msgs.Team team_color = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());

    // required uint32 task_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());

    // required uint32 robot_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->robot_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .llsf_msgs.Move move = 4;
    if (has_move()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *move_);
    }

    // optional .llsf_msgs.Retrieve retrieve = 5;
    if (has_retrieve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *retrieve_);
    }

    // optional .llsf_msgs.Deliver deliver = 6;
    if (has_deliver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *deliver_);
    }

    // optional .llsf_msgs.BufferStation buffer = 7;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *buffer_);
    }

    // optional .llsf_msgs.ExploreWaypoint explore_machine = 8;
    if (has_explore_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *explore_machine_);
    }

    // optional .llsf_msgs.WorkpieceDescription workpiece_description = 9;
    if (has_workpiece_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *workpiece_description_);
    }

  }
  if (_has_bits_[8 / 32] & 32256u) {
    // optional uint32 order_id = 10;
    if (has_order_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->order_id());
    }

    // optional bool cancel_task = 11;
    if (has_cancel_task()) {
      total_size += 1 + 1;
    }

    // optional bool pause_task = 12;
    if (has_pause_task()) {
      total_size += 1 + 1;
    }

    // optional bool successful = 13;
    if (has_successful()) {
      total_size += 1 + 1;
    }

    // optional bool canceled = 14;
    if (has_canceled()) {
      total_size += 1 + 1;
    }

    // optional uint32 error_code = 15;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgentTask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.AgentTask)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentTask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgentTask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.AgentTask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.AgentTask)
    MergeFrom(*source);
  }
}

void AgentTask::MergeFrom(const AgentTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.AgentTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_move()->::llsf_msgs::Move::MergeFrom(from.move());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_retrieve()->::llsf_msgs::Retrieve::MergeFrom(from.retrieve());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_deliver()->::llsf_msgs::Deliver::MergeFrom(from.deliver());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_buffer()->::llsf_msgs::BufferStation::MergeFrom(from.buffer());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_explore_machine()->::llsf_msgs::ExploreWaypoint::MergeFrom(from.explore_machine());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_workpiece_description()->::llsf_msgs::WorkpieceDescription::MergeFrom(from.workpiece_description());
    }
    if (cached_has_bits & 0x00000040u) {
      team_color_ = from.team_color_;
    }
    if (cached_has_bits & 0x00000080u) {
      task_id_ = from.task_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      robot_id_ = from.robot_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      order_id_ = from.order_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      cancel_task_ = from.cancel_task_;
    }
    if (cached_has_bits & 0x00000800u) {
      pause_task_ = from.pause_task_;
    }
    if (cached_has_bits & 0x00001000u) {
      successful_ = from.successful_;
    }
    if (cached_has_bits & 0x00002000u) {
      canceled_ = from.canceled_;
    }
    if (cached_has_bits & 0x00004000u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AgentTask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.AgentTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentTask::CopyFrom(const AgentTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.AgentTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentTask::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001c0) != 0x000001c0) return false;
  if (has_move()) {
    if (!this->move_->IsInitialized()) return false;
  }
  if (has_retrieve()) {
    if (!this->retrieve_->IsInitialized()) return false;
  }
  if (has_deliver()) {
    if (!this->deliver_->IsInitialized()) return false;
  }
  if (has_buffer()) {
    if (!this->buffer_->IsInitialized()) return false;
  }
  if (has_explore_machine()) {
    if (!this->explore_machine_->IsInitialized()) return false;
  }
  if (has_workpiece_description()) {
    if (!this->workpiece_description_->IsInitialized()) return false;
  }
  return true;
}

void AgentTask::Swap(AgentTask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgentTask::InternalSwap(AgentTask* other) {
  using std::swap;
  swap(move_, other->move_);
  swap(retrieve_, other->retrieve_);
  swap(deliver_, other->deliver_);
  swap(buffer_, other->buffer_);
  swap(explore_machine_, other->explore_machine_);
  swap(workpiece_description_, other->workpiece_description_);
  swap(team_color_, other->team_color_);
  swap(task_id_, other->task_id_);
  swap(robot_id_, other->robot_id_);
  swap(order_id_, other->order_id_);
  swap(cancel_task_, other->cancel_task_);
  swap(pause_task_, other->pause_task_);
  swap(successful_, other->successful_);
  swap(canceled_, other->canceled_);
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AgentTask::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Move::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Move::kWaypointFieldNumber;
const int Move::kMachinePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Move::Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_Move.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.Move)
}
Move::Move(const Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  waypoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_waypoint()) {
    waypoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waypoint_);
  }
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_point()) {
    machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
  }
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.Move)
}

void Move::SharedCtor() {
  waypoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Move::~Move() {
  // @@protoc_insertion_point(destructor:llsf_msgs.Move)
  SharedDtor();
}

void Move::SharedDtor() {
  waypoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Move::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Move::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Move& Move::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_Move.base);
  return *internal_default_instance();
}


void Move::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      waypoint_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      machine_point_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.Move)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string waypoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_waypoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->waypoint().data(), static_cast<int>(this->waypoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Move.waypoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_point()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_point().data(), static_cast<int>(this->machine_point().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Move.machine_point");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.Move)
  return false;
#undef DO_
}

void Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string waypoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->waypoint().data(), static_cast<int>(this->waypoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Move.waypoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->waypoint(), output);
  }

  // optional string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Move.machine_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->machine_point(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.Move)
}

::google::protobuf::uint8* Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string waypoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->waypoint().data(), static_cast<int>(this->waypoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Move.waypoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->waypoint(), target);
  }

  // optional string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Move.machine_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->machine_point(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.Move)
  return target;
}

size_t Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.Move)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string waypoint = 1;
  if (has_waypoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->waypoint());
  }
  // optional string machine_point = 2;
  if (has_machine_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.Move)
  GOOGLE_DCHECK_NE(&from, this);
  const Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.Move)
    MergeFrom(*source);
  }
}

void Move::MergeFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_waypoint();
      waypoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waypoint_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_machine_point();
      machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
    }
  }
}

void Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Move::CopyFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Move::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Move::Swap(Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Move::InternalSwap(Move* other) {
  using std::swap;
  waypoint_.Swap(&other->waypoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_point_.Swap(&other->machine_point_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Move::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Retrieve::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Retrieve::kMachineIdFieldNumber;
const int Retrieve::kMachinePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Retrieve::Retrieve()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_Retrieve.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.Retrieve)
}
Retrieve::Retrieve(const Retrieve& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_id()) {
    machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
  }
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_point()) {
    machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
  }
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.Retrieve)
}

void Retrieve::SharedCtor() {
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Retrieve::~Retrieve() {
  // @@protoc_insertion_point(destructor:llsf_msgs.Retrieve)
  SharedDtor();
}

void Retrieve::SharedDtor() {
  machine_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Retrieve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Retrieve::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Retrieve& Retrieve::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_Retrieve.base);
  return *internal_default_instance();
}


void Retrieve::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.Retrieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      machine_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      machine_point_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Retrieve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.Retrieve)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_id().data(), static_cast<int>(this->machine_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Retrieve.machine_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string machine_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_point()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_point().data(), static_cast<int>(this->machine_point().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Retrieve.machine_point");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.Retrieve)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.Retrieve)
  return false;
#undef DO_
}

void Retrieve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.Retrieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Retrieve.machine_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_id(), output);
  }

  // required string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Retrieve.machine_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->machine_point(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.Retrieve)
}

::google::protobuf::uint8* Retrieve::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.Retrieve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Retrieve.machine_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_id(), target);
  }

  // required string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Retrieve.machine_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->machine_point(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.Retrieve)
  return target;
}

size_t Retrieve::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.Retrieve)
  size_t total_size = 0;

  if (has_machine_id()) {
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());
  }

  if (has_machine_point()) {
    // required string machine_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());
  }

  return total_size;
}
size_t Retrieve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.Retrieve)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());

    // required string machine_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Retrieve::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.Retrieve)
  GOOGLE_DCHECK_NE(&from, this);
  const Retrieve* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Retrieve>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.Retrieve)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.Retrieve)
    MergeFrom(*source);
  }
}

void Retrieve::MergeFrom(const Retrieve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.Retrieve)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine_id();
      machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_machine_point();
      machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
    }
  }
}

void Retrieve::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.Retrieve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Retrieve::CopyFrom(const Retrieve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.Retrieve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Retrieve::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Retrieve::Swap(Retrieve* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Retrieve::InternalSwap(Retrieve* other) {
  using std::swap;
  machine_id_.Swap(&other->machine_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_point_.Swap(&other->machine_point_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Retrieve::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Deliver::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deliver::kMachineIdFieldNumber;
const int Deliver::kMachinePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deliver::Deliver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_Deliver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.Deliver)
}
Deliver::Deliver(const Deliver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_id()) {
    machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
  }
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_point()) {
    machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
  }
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.Deliver)
}

void Deliver::SharedCtor() {
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Deliver::~Deliver() {
  // @@protoc_insertion_point(destructor:llsf_msgs.Deliver)
  SharedDtor();
}

void Deliver::SharedDtor() {
  machine_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Deliver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Deliver::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Deliver& Deliver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_Deliver.base);
  return *internal_default_instance();
}


void Deliver::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.Deliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      machine_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      machine_point_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Deliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.Deliver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_id().data(), static_cast<int>(this->machine_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Deliver.machine_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string machine_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_point()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_point().data(), static_cast<int>(this->machine_point().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Deliver.machine_point");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.Deliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.Deliver)
  return false;
#undef DO_
}

void Deliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.Deliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Deliver.machine_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_id(), output);
  }

  // required string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Deliver.machine_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->machine_point(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.Deliver)
}

::google::protobuf::uint8* Deliver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.Deliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Deliver.machine_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_id(), target);
  }

  // required string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Deliver.machine_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->machine_point(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.Deliver)
  return target;
}

size_t Deliver::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.Deliver)
  size_t total_size = 0;

  if (has_machine_id()) {
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());
  }

  if (has_machine_point()) {
    // required string machine_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());
  }

  return total_size;
}
size_t Deliver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.Deliver)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());

    // required string machine_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Deliver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.Deliver)
  GOOGLE_DCHECK_NE(&from, this);
  const Deliver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Deliver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.Deliver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.Deliver)
    MergeFrom(*source);
  }
}

void Deliver::MergeFrom(const Deliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.Deliver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine_id();
      machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_machine_point();
      machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
    }
  }
}

void Deliver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.Deliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deliver::CopyFrom(const Deliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.Deliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deliver::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Deliver::Swap(Deliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deliver::InternalSwap(Deliver* other) {
  using std::swap;
  machine_id_.Swap(&other->machine_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_point_.Swap(&other->machine_point_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Deliver::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BufferStation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferStation::kMachineIdFieldNumber;
const int BufferStation::kShelfNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferStation::BufferStation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_BufferStation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.BufferStation)
}
BufferStation::BufferStation(const BufferStation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_id()) {
    machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
  }
  shelf_number_ = from.shelf_number_;
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.BufferStation)
}

void BufferStation::SharedCtor() {
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shelf_number_ = 0u;
}

BufferStation::~BufferStation() {
  // @@protoc_insertion_point(destructor:llsf_msgs.BufferStation)
  SharedDtor();
}

void BufferStation::SharedDtor() {
  machine_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BufferStation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BufferStation::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BufferStation& BufferStation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_BufferStation.base);
  return *internal_default_instance();
}


void BufferStation::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.BufferStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    machine_id_.ClearNonDefaultToEmptyNoArena();
  }
  shelf_number_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BufferStation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.BufferStation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_id().data(), static_cast<int>(this->machine_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.BufferStation.machine_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 shelf_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shelf_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shelf_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.BufferStation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.BufferStation)
  return false;
#undef DO_
}

void BufferStation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.BufferStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.BufferStation.machine_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_id(), output);
  }

  // required uint32 shelf_number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shelf_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.BufferStation)
}

::google::protobuf::uint8* BufferStation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.BufferStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.BufferStation.machine_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_id(), target);
  }

  // required uint32 shelf_number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shelf_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.BufferStation)
  return target;
}

size_t BufferStation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.BufferStation)
  size_t total_size = 0;

  if (has_machine_id()) {
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());
  }

  if (has_shelf_number()) {
    // required uint32 shelf_number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shelf_number());
  }

  return total_size;
}
size_t BufferStation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.BufferStation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());

    // required uint32 shelf_number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shelf_number());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BufferStation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.BufferStation)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferStation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferStation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.BufferStation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.BufferStation)
    MergeFrom(*source);
  }
}

void BufferStation::MergeFrom(const BufferStation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.BufferStation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine_id();
      machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      shelf_number_ = from.shelf_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BufferStation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.BufferStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferStation::CopyFrom(const BufferStation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.BufferStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferStation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void BufferStation::Swap(BufferStation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BufferStation::InternalSwap(BufferStation* other) {
  using std::swap;
  machine_id_.Swap(&other->machine_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shelf_number_, other->shelf_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BufferStation::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExploreWaypoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExploreWaypoint::kMachineIdFieldNumber;
const int ExploreWaypoint::kMachinePointFieldNumber;
const int ExploreWaypoint::kWaypointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExploreWaypoint::ExploreWaypoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_ExploreWaypoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.ExploreWaypoint)
}
ExploreWaypoint::ExploreWaypoint(const ExploreWaypoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_id()) {
    machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
  }
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_point()) {
    machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
  }
  waypoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_waypoint()) {
    waypoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waypoint_);
  }
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.ExploreWaypoint)
}

void ExploreWaypoint::SharedCtor() {
  machine_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waypoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExploreWaypoint::~ExploreWaypoint() {
  // @@protoc_insertion_point(destructor:llsf_msgs.ExploreWaypoint)
  SharedDtor();
}

void ExploreWaypoint::SharedDtor() {
  machine_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waypoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExploreWaypoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExploreWaypoint::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExploreWaypoint& ExploreWaypoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_ExploreWaypoint.base);
  return *internal_default_instance();
}


void ExploreWaypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.ExploreWaypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      machine_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      machine_point_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      waypoint_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExploreWaypoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.ExploreWaypoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_id().data(), static_cast<int>(this->machine_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.ExploreWaypoint.machine_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string machine_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_point()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_point().data(), static_cast<int>(this->machine_point().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.ExploreWaypoint.machine_point");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string waypoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_waypoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->waypoint().data(), static_cast<int>(this->waypoint().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.ExploreWaypoint.waypoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.ExploreWaypoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.ExploreWaypoint)
  return false;
#undef DO_
}

void ExploreWaypoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.ExploreWaypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.ExploreWaypoint.machine_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->machine_id(), output);
  }

  // required string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.ExploreWaypoint.machine_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->machine_point(), output);
  }

  // required string waypoint = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->waypoint().data(), static_cast<int>(this->waypoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.ExploreWaypoint.waypoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->waypoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.ExploreWaypoint)
}

::google::protobuf::uint8* ExploreWaypoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.ExploreWaypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string machine_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_id().data(), static_cast<int>(this->machine_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.ExploreWaypoint.machine_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->machine_id(), target);
  }

  // required string machine_point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_point().data(), static_cast<int>(this->machine_point().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.ExploreWaypoint.machine_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->machine_point(), target);
  }

  // required string waypoint = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->waypoint().data(), static_cast<int>(this->waypoint().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.ExploreWaypoint.waypoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->waypoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.ExploreWaypoint)
  return target;
}

size_t ExploreWaypoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.ExploreWaypoint)
  size_t total_size = 0;

  if (has_machine_id()) {
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());
  }

  if (has_machine_point()) {
    // required string machine_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());
  }

  if (has_waypoint()) {
    // required string waypoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->waypoint());
  }

  return total_size;
}
size_t ExploreWaypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.ExploreWaypoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string machine_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_id());

    // required string machine_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_point());

    // required string waypoint = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->waypoint());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExploreWaypoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.ExploreWaypoint)
  GOOGLE_DCHECK_NE(&from, this);
  const ExploreWaypoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExploreWaypoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.ExploreWaypoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.ExploreWaypoint)
    MergeFrom(*source);
  }
}

void ExploreWaypoint::MergeFrom(const ExploreWaypoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.ExploreWaypoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine_id();
      machine_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_machine_point();
      machine_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_point_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_waypoint();
      waypoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waypoint_);
    }
  }
}

void ExploreWaypoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.ExploreWaypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExploreWaypoint::CopyFrom(const ExploreWaypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.ExploreWaypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExploreWaypoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ExploreWaypoint::Swap(ExploreWaypoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExploreWaypoint::InternalSwap(ExploreWaypoint* other) {
  using std::swap;
  machine_id_.Swap(&other->machine_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_point_.Swap(&other->machine_point_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  waypoint_.Swap(&other->waypoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExploreWaypoint::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkpieceDescription::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkpieceDescription::kBaseColorFieldNumber;
const int WorkpieceDescription::kRingColorsFieldNumber;
const int WorkpieceDescription::kCapColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkpieceDescription::WorkpieceDescription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AgentTask_2eproto::scc_info_WorkpieceDescription.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.WorkpieceDescription)
}
WorkpieceDescription::WorkpieceDescription(const WorkpieceDescription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ring_colors_(from.ring_colors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&base_color_, &from.base_color_,
    static_cast<size_t>(reinterpret_cast<char*>(&cap_color_) -
    reinterpret_cast<char*>(&base_color_)) + sizeof(cap_color_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.WorkpieceDescription)
}

void WorkpieceDescription::SharedCtor() {
  base_color_ = 1;
  cap_color_ = 1;
}

WorkpieceDescription::~WorkpieceDescription() {
  // @@protoc_insertion_point(destructor:llsf_msgs.WorkpieceDescription)
  SharedDtor();
}

void WorkpieceDescription::SharedDtor() {
}

void WorkpieceDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkpieceDescription::descriptor() {
  ::protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkpieceDescription& WorkpieceDescription::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AgentTask_2eproto::scc_info_WorkpieceDescription.base);
  return *internal_default_instance();
}


void WorkpieceDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.WorkpieceDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ring_colors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    base_color_ = 1;
    cap_color_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorkpieceDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.WorkpieceDescription)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .llsf_msgs.BaseColor base_color = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::BaseColor_IsValid(value)) {
            set_base_color(static_cast< ::llsf_msgs::BaseColor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.RingColor ring_colors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::RingColor_IsValid(value)) {
            add_ring_colors(static_cast< ::llsf_msgs::RingColor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::llsf_msgs::RingColor_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_ring_colors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.CapColor cap_color = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::CapColor_IsValid(value)) {
            set_cap_color(static_cast< ::llsf_msgs::CapColor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.WorkpieceDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.WorkpieceDescription)
  return false;
#undef DO_
}

void WorkpieceDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.WorkpieceDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.BaseColor base_color = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->base_color(), output);
  }

  // repeated .llsf_msgs.RingColor ring_colors = 4;
  for (int i = 0, n = this->ring_colors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ring_colors(i), output);
  }

  // optional .llsf_msgs.CapColor cap_color = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->cap_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.WorkpieceDescription)
}

::google::protobuf::uint8* WorkpieceDescription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.WorkpieceDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.BaseColor base_color = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->base_color(), target);
  }

  // repeated .llsf_msgs.RingColor ring_colors = 4;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    4, this->ring_colors_, target);

  // optional .llsf_msgs.CapColor cap_color = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->cap_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.WorkpieceDescription)
  return target;
}

size_t WorkpieceDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.WorkpieceDescription)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .llsf_msgs.BaseColor base_color = 3;
  if (has_base_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->base_color());
  }
  // repeated .llsf_msgs.RingColor ring_colors = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->ring_colors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->ring_colors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional .llsf_msgs.CapColor cap_color = 5;
  if (has_cap_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cap_color());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkpieceDescription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.WorkpieceDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkpieceDescription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkpieceDescription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.WorkpieceDescription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.WorkpieceDescription)
    MergeFrom(*source);
  }
}

void WorkpieceDescription::MergeFrom(const WorkpieceDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.WorkpieceDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ring_colors_.MergeFrom(from.ring_colors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      base_color_ = from.base_color_;
    }
    if (cached_has_bits & 0x00000002u) {
      cap_color_ = from.cap_color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorkpieceDescription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.WorkpieceDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkpieceDescription::CopyFrom(const WorkpieceDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.WorkpieceDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkpieceDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void WorkpieceDescription::Swap(WorkpieceDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkpieceDescription::InternalSwap(WorkpieceDescription* other) {
  using std::swap;
  ring_colors_.InternalSwap(&other->ring_colors_);
  swap(base_color_, other->base_color_);
  swap(cap_color_, other->cap_color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkpieceDescription::GetMetadata() const {
  protobuf_AgentTask_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AgentTask_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::AgentTask* Arena::CreateMaybeMessage< ::llsf_msgs::AgentTask >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::AgentTask >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::Move* Arena::CreateMaybeMessage< ::llsf_msgs::Move >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::Move >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::Retrieve* Arena::CreateMaybeMessage< ::llsf_msgs::Retrieve >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::Retrieve >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::Deliver* Arena::CreateMaybeMessage< ::llsf_msgs::Deliver >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::Deliver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::BufferStation* Arena::CreateMaybeMessage< ::llsf_msgs::BufferStation >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::BufferStation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::ExploreWaypoint* Arena::CreateMaybeMessage< ::llsf_msgs::ExploreWaypoint >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::ExploreWaypoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::WorkpieceDescription* Arena::CreateMaybeMessage< ::llsf_msgs::WorkpieceDescription >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::WorkpieceDescription >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
