// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderInfo.proto

#ifndef PROTOBUF_INCLUDED_OrderInfo_2eproto
#define PROTOBUF_INCLUDED_OrderInfo_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Team.pb.h"
#include "Time.pb.h"
#include "ProductColor.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_OrderInfo_2eproto 

namespace protobuf_OrderInfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_OrderInfo_2eproto
namespace llsf_msgs {
class ConfirmDelivery;
class ConfirmDeliveryDefaultTypeInternal;
extern ConfirmDeliveryDefaultTypeInternal _ConfirmDelivery_default_instance_;
class Order;
class OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
class OrderInfo;
class OrderInfoDefaultTypeInternal;
extern OrderInfoDefaultTypeInternal _OrderInfo_default_instance_;
class SetOrderDelivered;
class SetOrderDeliveredDefaultTypeInternal;
extern SetOrderDeliveredDefaultTypeInternal _SetOrderDelivered_default_instance_;
class UnconfirmedDelivery;
class UnconfirmedDeliveryDefaultTypeInternal;
extern UnconfirmedDeliveryDefaultTypeInternal _UnconfirmedDelivery_default_instance_;
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> ::llsf_msgs::ConfirmDelivery* Arena::CreateMaybeMessage<::llsf_msgs::ConfirmDelivery>(Arena*);
template<> ::llsf_msgs::Order* Arena::CreateMaybeMessage<::llsf_msgs::Order>(Arena*);
template<> ::llsf_msgs::OrderInfo* Arena::CreateMaybeMessage<::llsf_msgs::OrderInfo>(Arena*);
template<> ::llsf_msgs::SetOrderDelivered* Arena::CreateMaybeMessage<::llsf_msgs::SetOrderDelivered>(Arena*);
template<> ::llsf_msgs::UnconfirmedDelivery* Arena::CreateMaybeMessage<::llsf_msgs::UnconfirmedDelivery>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace llsf_msgs {

enum UnconfirmedDelivery_CompType {
  UnconfirmedDelivery_CompType_COMP_ID = 2000,
  UnconfirmedDelivery_CompType_MSG_TYPE = 45
};
bool UnconfirmedDelivery_CompType_IsValid(int value);
const UnconfirmedDelivery_CompType UnconfirmedDelivery_CompType_CompType_MIN = UnconfirmedDelivery_CompType_MSG_TYPE;
const UnconfirmedDelivery_CompType UnconfirmedDelivery_CompType_CompType_MAX = UnconfirmedDelivery_CompType_COMP_ID;
const int UnconfirmedDelivery_CompType_CompType_ARRAYSIZE = UnconfirmedDelivery_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnconfirmedDelivery_CompType_descriptor();
inline const ::std::string& UnconfirmedDelivery_CompType_Name(UnconfirmedDelivery_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnconfirmedDelivery_CompType_descriptor(), value);
}
inline bool UnconfirmedDelivery_CompType_Parse(
    const ::std::string& name, UnconfirmedDelivery_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnconfirmedDelivery_CompType>(
    UnconfirmedDelivery_CompType_descriptor(), name, value);
}
enum Order_CompType {
  Order_CompType_COMP_ID = 2000,
  Order_CompType_MSG_TYPE = 42
};
bool Order_CompType_IsValid(int value);
const Order_CompType Order_CompType_CompType_MIN = Order_CompType_MSG_TYPE;
const Order_CompType Order_CompType_CompType_MAX = Order_CompType_COMP_ID;
const int Order_CompType_CompType_ARRAYSIZE = Order_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Order_CompType_descriptor();
inline const ::std::string& Order_CompType_Name(Order_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Order_CompType_descriptor(), value);
}
inline bool Order_CompType_Parse(
    const ::std::string& name, Order_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Order_CompType>(
    Order_CompType_descriptor(), name, value);
}
enum Order_Complexity {
  Order_Complexity_C0 = 0,
  Order_Complexity_C1 = 1,
  Order_Complexity_C2 = 2,
  Order_Complexity_C3 = 3
};
bool Order_Complexity_IsValid(int value);
const Order_Complexity Order_Complexity_Complexity_MIN = Order_Complexity_C0;
const Order_Complexity Order_Complexity_Complexity_MAX = Order_Complexity_C3;
const int Order_Complexity_Complexity_ARRAYSIZE = Order_Complexity_Complexity_MAX + 1;

const ::google::protobuf::EnumDescriptor* Order_Complexity_descriptor();
inline const ::std::string& Order_Complexity_Name(Order_Complexity value) {
  return ::google::protobuf::internal::NameOfEnum(
    Order_Complexity_descriptor(), value);
}
inline bool Order_Complexity_Parse(
    const ::std::string& name, Order_Complexity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Order_Complexity>(
    Order_Complexity_descriptor(), name, value);
}
enum OrderInfo_CompType {
  OrderInfo_CompType_COMP_ID = 2000,
  OrderInfo_CompType_MSG_TYPE = 41
};
bool OrderInfo_CompType_IsValid(int value);
const OrderInfo_CompType OrderInfo_CompType_CompType_MIN = OrderInfo_CompType_MSG_TYPE;
const OrderInfo_CompType OrderInfo_CompType_CompType_MAX = OrderInfo_CompType_COMP_ID;
const int OrderInfo_CompType_CompType_ARRAYSIZE = OrderInfo_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderInfo_CompType_descriptor();
inline const ::std::string& OrderInfo_CompType_Name(OrderInfo_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderInfo_CompType_descriptor(), value);
}
inline bool OrderInfo_CompType_Parse(
    const ::std::string& name, OrderInfo_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderInfo_CompType>(
    OrderInfo_CompType_descriptor(), name, value);
}
enum SetOrderDelivered_CompType {
  SetOrderDelivered_CompType_COMP_ID = 2000,
  SetOrderDelivered_CompType_MSG_TYPE = 43
};
bool SetOrderDelivered_CompType_IsValid(int value);
const SetOrderDelivered_CompType SetOrderDelivered_CompType_CompType_MIN = SetOrderDelivered_CompType_MSG_TYPE;
const SetOrderDelivered_CompType SetOrderDelivered_CompType_CompType_MAX = SetOrderDelivered_CompType_COMP_ID;
const int SetOrderDelivered_CompType_CompType_ARRAYSIZE = SetOrderDelivered_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetOrderDelivered_CompType_descriptor();
inline const ::std::string& SetOrderDelivered_CompType_Name(SetOrderDelivered_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetOrderDelivered_CompType_descriptor(), value);
}
inline bool SetOrderDelivered_CompType_Parse(
    const ::std::string& name, SetOrderDelivered_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetOrderDelivered_CompType>(
    SetOrderDelivered_CompType_descriptor(), name, value);
}
enum ConfirmDelivery_CompType {
  ConfirmDelivery_CompType_COMP_ID = 2000,
  ConfirmDelivery_CompType_MSG_TYPE = 46
};
bool ConfirmDelivery_CompType_IsValid(int value);
const ConfirmDelivery_CompType ConfirmDelivery_CompType_CompType_MIN = ConfirmDelivery_CompType_MSG_TYPE;
const ConfirmDelivery_CompType ConfirmDelivery_CompType_CompType_MAX = ConfirmDelivery_CompType_COMP_ID;
const int ConfirmDelivery_CompType_CompType_ARRAYSIZE = ConfirmDelivery_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfirmDelivery_CompType_descriptor();
inline const ::std::string& ConfirmDelivery_CompType_Name(ConfirmDelivery_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfirmDelivery_CompType_descriptor(), value);
}
inline bool ConfirmDelivery_CompType_Parse(
    const ::std::string& name, ConfirmDelivery_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfirmDelivery_CompType>(
    ConfirmDelivery_CompType_descriptor(), name, value);
}
// ===================================================================

class UnconfirmedDelivery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.UnconfirmedDelivery) */ {
 public:
  UnconfirmedDelivery();
  virtual ~UnconfirmedDelivery();

  UnconfirmedDelivery(const UnconfirmedDelivery& from);

  inline UnconfirmedDelivery& operator=(const UnconfirmedDelivery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnconfirmedDelivery(UnconfirmedDelivery&& from) noexcept
    : UnconfirmedDelivery() {
    *this = ::std::move(from);
  }

  inline UnconfirmedDelivery& operator=(UnconfirmedDelivery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnconfirmedDelivery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnconfirmedDelivery* internal_default_instance() {
    return reinterpret_cast<const UnconfirmedDelivery*>(
               &_UnconfirmedDelivery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UnconfirmedDelivery* other);
  friend void swap(UnconfirmedDelivery& a, UnconfirmedDelivery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnconfirmedDelivery* New() const final {
    return CreateMaybeMessage<UnconfirmedDelivery>(NULL);
  }

  UnconfirmedDelivery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnconfirmedDelivery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnconfirmedDelivery& from);
  void MergeFrom(const UnconfirmedDelivery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnconfirmedDelivery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UnconfirmedDelivery_CompType CompType;
  static const CompType COMP_ID =
    UnconfirmedDelivery_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    UnconfirmedDelivery_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return UnconfirmedDelivery_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    UnconfirmedDelivery_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    UnconfirmedDelivery_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    UnconfirmedDelivery_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return UnconfirmedDelivery_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return UnconfirmedDelivery_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return UnconfirmedDelivery_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .llsf_msgs.Time delivery_time = 3;
  bool has_delivery_time() const;
  void clear_delivery_time();
  static const int kDeliveryTimeFieldNumber = 3;
  private:
  const ::llsf_msgs::Time& _internal_delivery_time() const;
  public:
  const ::llsf_msgs::Time& delivery_time() const;
  ::llsf_msgs::Time* release_delivery_time();
  ::llsf_msgs::Time* mutable_delivery_time();
  void set_allocated_delivery_time(::llsf_msgs::Time* delivery_time);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .llsf_msgs.Team team = 2;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 2;
  ::llsf_msgs::Team team() const;
  void set_team(::llsf_msgs::Team value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.UnconfirmedDelivery)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_team();
  void clear_has_team();
  void set_has_delivery_time();
  void clear_has_delivery_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::llsf_msgs::Time* delivery_time_;
  ::google::protobuf::uint32 id_;
  int team_;
  friend struct ::protobuf_OrderInfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.Order) */ {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Order(Order&& from) noexcept
    : Order() {
    *this = ::std::move(from);
  }

  inline Order& operator=(Order&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
               &_Order_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Order* other);
  friend void swap(Order& a, Order& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Order* New() const final {
    return CreateMaybeMessage<Order>(NULL);
  }

  Order* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Order>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Order_CompType CompType;
  static const CompType COMP_ID =
    Order_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    Order_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return Order_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    Order_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    Order_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    Order_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return Order_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return Order_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return Order_CompType_Parse(name, value);
  }

  typedef Order_Complexity Complexity;
  static const Complexity C0 =
    Order_Complexity_C0;
  static const Complexity C1 =
    Order_Complexity_C1;
  static const Complexity C2 =
    Order_Complexity_C2;
  static const Complexity C3 =
    Order_Complexity_C3;
  static inline bool Complexity_IsValid(int value) {
    return Order_Complexity_IsValid(value);
  }
  static const Complexity Complexity_MIN =
    Order_Complexity_Complexity_MIN;
  static const Complexity Complexity_MAX =
    Order_Complexity_Complexity_MAX;
  static const int Complexity_ARRAYSIZE =
    Order_Complexity_Complexity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Complexity_descriptor() {
    return Order_Complexity_descriptor();
  }
  static inline const ::std::string& Complexity_Name(Complexity value) {
    return Order_Complexity_Name(value);
  }
  static inline bool Complexity_Parse(const ::std::string& name,
      Complexity* value) {
    return Order_Complexity_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .llsf_msgs.RingColor ring_colors = 4;
  int ring_colors_size() const;
  void clear_ring_colors();
  static const int kRingColorsFieldNumber = 4;
  ::llsf_msgs::RingColor ring_colors(int index) const;
  void set_ring_colors(int index, ::llsf_msgs::RingColor value);
  void add_ring_colors(::llsf_msgs::RingColor value);
  const ::google::protobuf::RepeatedField<int>& ring_colors() const;
  ::google::protobuf::RepeatedField<int>* mutable_ring_colors();

  // repeated .llsf_msgs.UnconfirmedDelivery unconfirmed_deliveries = 12;
  int unconfirmed_deliveries_size() const;
  void clear_unconfirmed_deliveries();
  static const int kUnconfirmedDeliveriesFieldNumber = 12;
  ::llsf_msgs::UnconfirmedDelivery* mutable_unconfirmed_deliveries(int index);
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::UnconfirmedDelivery >*
      mutable_unconfirmed_deliveries();
  const ::llsf_msgs::UnconfirmedDelivery& unconfirmed_deliveries(int index) const;
  ::llsf_msgs::UnconfirmedDelivery* add_unconfirmed_deliveries();
  const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::UnconfirmedDelivery >&
      unconfirmed_deliveries() const;

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .llsf_msgs.Order.Complexity complexity = 2;
  bool has_complexity() const;
  void clear_complexity();
  static const int kComplexityFieldNumber = 2;
  ::llsf_msgs::Order_Complexity complexity() const;
  void set_complexity(::llsf_msgs::Order_Complexity value);

  // required uint32 quantity_requested = 6;
  bool has_quantity_requested() const;
  void clear_quantity_requested();
  static const int kQuantityRequestedFieldNumber = 6;
  ::google::protobuf::uint32 quantity_requested() const;
  void set_quantity_requested(::google::protobuf::uint32 value);

  // required uint32 quantity_delivered_cyan = 7;
  bool has_quantity_delivered_cyan() const;
  void clear_quantity_delivered_cyan();
  static const int kQuantityDeliveredCyanFieldNumber = 7;
  ::google::protobuf::uint32 quantity_delivered_cyan() const;
  void set_quantity_delivered_cyan(::google::protobuf::uint32 value);

  // required uint32 quantity_delivered_magenta = 8;
  bool has_quantity_delivered_magenta() const;
  void clear_quantity_delivered_magenta();
  static const int kQuantityDeliveredMagentaFieldNumber = 8;
  ::google::protobuf::uint32 quantity_delivered_magenta() const;
  void set_quantity_delivered_magenta(::google::protobuf::uint32 value);

  // required uint32 delivery_period_begin = 9;
  bool has_delivery_period_begin() const;
  void clear_delivery_period_begin();
  static const int kDeliveryPeriodBeginFieldNumber = 9;
  ::google::protobuf::uint32 delivery_period_begin() const;
  void set_delivery_period_begin(::google::protobuf::uint32 value);

  // required uint32 delivery_period_end = 10;
  bool has_delivery_period_end() const;
  void clear_delivery_period_end();
  static const int kDeliveryPeriodEndFieldNumber = 10;
  ::google::protobuf::uint32 delivery_period_end() const;
  void set_delivery_period_end(::google::protobuf::uint32 value);

  // required uint32 delivery_gate = 11;
  bool has_delivery_gate() const;
  void clear_delivery_gate();
  static const int kDeliveryGateFieldNumber = 11;
  ::google::protobuf::uint32 delivery_gate() const;
  void set_delivery_gate(::google::protobuf::uint32 value);

  // required bool competitive = 13;
  bool has_competitive() const;
  void clear_competitive();
  static const int kCompetitiveFieldNumber = 13;
  bool competitive() const;
  void set_competitive(bool value);

  // required .llsf_msgs.BaseColor base_color = 3;
  bool has_base_color() const;
  void clear_base_color();
  static const int kBaseColorFieldNumber = 3;
  ::llsf_msgs::BaseColor base_color() const;
  void set_base_color(::llsf_msgs::BaseColor value);

  // required .llsf_msgs.CapColor cap_color = 5;
  bool has_cap_color() const;
  void clear_cap_color();
  static const int kCapColorFieldNumber = 5;
  ::llsf_msgs::CapColor cap_color() const;
  void set_cap_color(::llsf_msgs::CapColor value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.Order)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_complexity();
  void clear_has_complexity();
  void set_has_base_color();
  void clear_has_base_color();
  void set_has_cap_color();
  void clear_has_cap_color();
  void set_has_quantity_requested();
  void clear_has_quantity_requested();
  void set_has_quantity_delivered_cyan();
  void clear_has_quantity_delivered_cyan();
  void set_has_quantity_delivered_magenta();
  void clear_has_quantity_delivered_magenta();
  void set_has_delivery_period_begin();
  void clear_has_delivery_period_begin();
  void set_has_delivery_period_end();
  void clear_has_delivery_period_end();
  void set_has_delivery_gate();
  void clear_has_delivery_gate();
  void set_has_competitive();
  void clear_has_competitive();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField<int> ring_colors_;
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::UnconfirmedDelivery > unconfirmed_deliveries_;
  ::google::protobuf::uint32 id_;
  int complexity_;
  ::google::protobuf::uint32 quantity_requested_;
  ::google::protobuf::uint32 quantity_delivered_cyan_;
  ::google::protobuf::uint32 quantity_delivered_magenta_;
  ::google::protobuf::uint32 delivery_period_begin_;
  ::google::protobuf::uint32 delivery_period_end_;
  ::google::protobuf::uint32 delivery_gate_;
  bool competitive_;
  int base_color_;
  int cap_color_;
  friend struct ::protobuf_OrderInfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.OrderInfo) */ {
 public:
  OrderInfo();
  virtual ~OrderInfo();

  OrderInfo(const OrderInfo& from);

  inline OrderInfo& operator=(const OrderInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderInfo(OrderInfo&& from) noexcept
    : OrderInfo() {
    *this = ::std::move(from);
  }

  inline OrderInfo& operator=(OrderInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderInfo* internal_default_instance() {
    return reinterpret_cast<const OrderInfo*>(
               &_OrderInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(OrderInfo* other);
  friend void swap(OrderInfo& a, OrderInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderInfo* New() const final {
    return CreateMaybeMessage<OrderInfo>(NULL);
  }

  OrderInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderInfo& from);
  void MergeFrom(const OrderInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OrderInfo_CompType CompType;
  static const CompType COMP_ID =
    OrderInfo_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    OrderInfo_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return OrderInfo_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    OrderInfo_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    OrderInfo_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    OrderInfo_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return OrderInfo_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return OrderInfo_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return OrderInfo_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .llsf_msgs.Order orders = 1;
  int orders_size() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 1;
  ::llsf_msgs::Order* mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Order >*
      mutable_orders();
  const ::llsf_msgs::Order& orders(int index) const;
  ::llsf_msgs::Order* add_orders();
  const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Order >&
      orders() const;

  // @@protoc_insertion_point(class_scope:llsf_msgs.OrderInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Order > orders_;
  friend struct ::protobuf_OrderInfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOrderDelivered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.SetOrderDelivered) */ {
 public:
  SetOrderDelivered();
  virtual ~SetOrderDelivered();

  SetOrderDelivered(const SetOrderDelivered& from);

  inline SetOrderDelivered& operator=(const SetOrderDelivered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetOrderDelivered(SetOrderDelivered&& from) noexcept
    : SetOrderDelivered() {
    *this = ::std::move(from);
  }

  inline SetOrderDelivered& operator=(SetOrderDelivered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOrderDelivered& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetOrderDelivered* internal_default_instance() {
    return reinterpret_cast<const SetOrderDelivered*>(
               &_SetOrderDelivered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SetOrderDelivered* other);
  friend void swap(SetOrderDelivered& a, SetOrderDelivered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetOrderDelivered* New() const final {
    return CreateMaybeMessage<SetOrderDelivered>(NULL);
  }

  SetOrderDelivered* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetOrderDelivered>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetOrderDelivered& from);
  void MergeFrom(const SetOrderDelivered& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetOrderDelivered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SetOrderDelivered_CompType CompType;
  static const CompType COMP_ID =
    SetOrderDelivered_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    SetOrderDelivered_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return SetOrderDelivered_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    SetOrderDelivered_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    SetOrderDelivered_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    SetOrderDelivered_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return SetOrderDelivered_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return SetOrderDelivered_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return SetOrderDelivered_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .llsf_msgs.Team team_color = 1;
  bool has_team_color() const;
  void clear_team_color();
  static const int kTeamColorFieldNumber = 1;
  ::llsf_msgs::Team team_color() const;
  void set_team_color(::llsf_msgs::Team value);

  // required uint32 order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.SetOrderDelivered)
 private:
  void set_has_team_color();
  void clear_has_team_color();
  void set_has_order_id();
  void clear_has_order_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int team_color_;
  ::google::protobuf::uint32 order_id_;
  friend struct ::protobuf_OrderInfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmDelivery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.ConfirmDelivery) */ {
 public:
  ConfirmDelivery();
  virtual ~ConfirmDelivery();

  ConfirmDelivery(const ConfirmDelivery& from);

  inline ConfirmDelivery& operator=(const ConfirmDelivery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfirmDelivery(ConfirmDelivery&& from) noexcept
    : ConfirmDelivery() {
    *this = ::std::move(from);
  }

  inline ConfirmDelivery& operator=(ConfirmDelivery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmDelivery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfirmDelivery* internal_default_instance() {
    return reinterpret_cast<const ConfirmDelivery*>(
               &_ConfirmDelivery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ConfirmDelivery* other);
  friend void swap(ConfirmDelivery& a, ConfirmDelivery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfirmDelivery* New() const final {
    return CreateMaybeMessage<ConfirmDelivery>(NULL);
  }

  ConfirmDelivery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfirmDelivery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfirmDelivery& from);
  void MergeFrom(const ConfirmDelivery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfirmDelivery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConfirmDelivery_CompType CompType;
  static const CompType COMP_ID =
    ConfirmDelivery_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    ConfirmDelivery_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return ConfirmDelivery_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    ConfirmDelivery_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    ConfirmDelivery_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    ConfirmDelivery_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return ConfirmDelivery_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return ConfirmDelivery_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return ConfirmDelivery_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 delivery_id = 1;
  bool has_delivery_id() const;
  void clear_delivery_id();
  static const int kDeliveryIdFieldNumber = 1;
  ::google::protobuf::uint32 delivery_id() const;
  void set_delivery_id(::google::protobuf::uint32 value);

  // required bool correct = 2;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 2;
  bool correct() const;
  void set_correct(bool value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.ConfirmDelivery)
 private:
  void set_has_delivery_id();
  void clear_has_delivery_id();
  void set_has_correct();
  void clear_has_correct();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 delivery_id_;
  bool correct_;
  friend struct ::protobuf_OrderInfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnconfirmedDelivery

// required uint32 id = 1;
inline bool UnconfirmedDelivery::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnconfirmedDelivery::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnconfirmedDelivery::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnconfirmedDelivery::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UnconfirmedDelivery::id() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.UnconfirmedDelivery.id)
  return id_;
}
inline void UnconfirmedDelivery::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.UnconfirmedDelivery.id)
}

// required .llsf_msgs.Team team = 2;
inline bool UnconfirmedDelivery::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnconfirmedDelivery::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnconfirmedDelivery::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnconfirmedDelivery::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::llsf_msgs::Team UnconfirmedDelivery::team() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.UnconfirmedDelivery.team)
  return static_cast< ::llsf_msgs::Team >(team_);
}
inline void UnconfirmedDelivery::set_team(::llsf_msgs::Team value) {
  assert(::llsf_msgs::Team_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.UnconfirmedDelivery.team)
}

// required .llsf_msgs.Time delivery_time = 3;
inline bool UnconfirmedDelivery::has_delivery_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnconfirmedDelivery::set_has_delivery_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnconfirmedDelivery::clear_has_delivery_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::llsf_msgs::Time& UnconfirmedDelivery::_internal_delivery_time() const {
  return *delivery_time_;
}
inline const ::llsf_msgs::Time& UnconfirmedDelivery::delivery_time() const {
  const ::llsf_msgs::Time* p = delivery_time_;
  // @@protoc_insertion_point(field_get:llsf_msgs.UnconfirmedDelivery.delivery_time)
  return p != NULL ? *p : *reinterpret_cast<const ::llsf_msgs::Time*>(
      &::llsf_msgs::_Time_default_instance_);
}
inline ::llsf_msgs::Time* UnconfirmedDelivery::release_delivery_time() {
  // @@protoc_insertion_point(field_release:llsf_msgs.UnconfirmedDelivery.delivery_time)
  clear_has_delivery_time();
  ::llsf_msgs::Time* temp = delivery_time_;
  delivery_time_ = NULL;
  return temp;
}
inline ::llsf_msgs::Time* UnconfirmedDelivery::mutable_delivery_time() {
  set_has_delivery_time();
  if (delivery_time_ == NULL) {
    auto* p = CreateMaybeMessage<::llsf_msgs::Time>(GetArenaNoVirtual());
    delivery_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:llsf_msgs.UnconfirmedDelivery.delivery_time)
  return delivery_time_;
}
inline void UnconfirmedDelivery::set_allocated_delivery_time(::llsf_msgs::Time* delivery_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(delivery_time_);
  }
  if (delivery_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delivery_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delivery_time, submessage_arena);
    }
    set_has_delivery_time();
  } else {
    clear_has_delivery_time();
  }
  delivery_time_ = delivery_time;
  // @@protoc_insertion_point(field_set_allocated:llsf_msgs.UnconfirmedDelivery.delivery_time)
}

// -------------------------------------------------------------------

// Order

// required uint32 id = 1;
inline bool Order::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Order::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Order::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Order::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Order::id() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.id)
  return id_;
}
inline void Order::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.id)
}

// required .llsf_msgs.Order.Complexity complexity = 2;
inline bool Order::has_complexity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Order::set_has_complexity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Order::clear_has_complexity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Order::clear_complexity() {
  complexity_ = 0;
  clear_has_complexity();
}
inline ::llsf_msgs::Order_Complexity Order::complexity() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.complexity)
  return static_cast< ::llsf_msgs::Order_Complexity >(complexity_);
}
inline void Order::set_complexity(::llsf_msgs::Order_Complexity value) {
  assert(::llsf_msgs::Order_Complexity_IsValid(value));
  set_has_complexity();
  complexity_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.complexity)
}

// required .llsf_msgs.BaseColor base_color = 3;
inline bool Order::has_base_color() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Order::set_has_base_color() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Order::clear_has_base_color() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Order::clear_base_color() {
  base_color_ = 1;
  clear_has_base_color();
}
inline ::llsf_msgs::BaseColor Order::base_color() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.base_color)
  return static_cast< ::llsf_msgs::BaseColor >(base_color_);
}
inline void Order::set_base_color(::llsf_msgs::BaseColor value) {
  assert(::llsf_msgs::BaseColor_IsValid(value));
  set_has_base_color();
  base_color_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.base_color)
}

// repeated .llsf_msgs.RingColor ring_colors = 4;
inline int Order::ring_colors_size() const {
  return ring_colors_.size();
}
inline void Order::clear_ring_colors() {
  ring_colors_.Clear();
}
inline ::llsf_msgs::RingColor Order::ring_colors(int index) const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.ring_colors)
  return static_cast< ::llsf_msgs::RingColor >(ring_colors_.Get(index));
}
inline void Order::set_ring_colors(int index, ::llsf_msgs::RingColor value) {
  assert(::llsf_msgs::RingColor_IsValid(value));
  ring_colors_.Set(index, value);
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.ring_colors)
}
inline void Order::add_ring_colors(::llsf_msgs::RingColor value) {
  assert(::llsf_msgs::RingColor_IsValid(value));
  ring_colors_.Add(value);
  // @@protoc_insertion_point(field_add:llsf_msgs.Order.ring_colors)
}
inline const ::google::protobuf::RepeatedField<int>&
Order::ring_colors() const {
  // @@protoc_insertion_point(field_list:llsf_msgs.Order.ring_colors)
  return ring_colors_;
}
inline ::google::protobuf::RepeatedField<int>*
Order::mutable_ring_colors() {
  // @@protoc_insertion_point(field_mutable_list:llsf_msgs.Order.ring_colors)
  return &ring_colors_;
}

// required .llsf_msgs.CapColor cap_color = 5;
inline bool Order::has_cap_color() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Order::set_has_cap_color() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Order::clear_has_cap_color() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Order::clear_cap_color() {
  cap_color_ = 1;
  clear_has_cap_color();
}
inline ::llsf_msgs::CapColor Order::cap_color() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.cap_color)
  return static_cast< ::llsf_msgs::CapColor >(cap_color_);
}
inline void Order::set_cap_color(::llsf_msgs::CapColor value) {
  assert(::llsf_msgs::CapColor_IsValid(value));
  set_has_cap_color();
  cap_color_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.cap_color)
}

// required uint32 quantity_requested = 6;
inline bool Order::has_quantity_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Order::set_has_quantity_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Order::clear_has_quantity_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Order::clear_quantity_requested() {
  quantity_requested_ = 0u;
  clear_has_quantity_requested();
}
inline ::google::protobuf::uint32 Order::quantity_requested() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.quantity_requested)
  return quantity_requested_;
}
inline void Order::set_quantity_requested(::google::protobuf::uint32 value) {
  set_has_quantity_requested();
  quantity_requested_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.quantity_requested)
}

// required uint32 quantity_delivered_cyan = 7;
inline bool Order::has_quantity_delivered_cyan() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Order::set_has_quantity_delivered_cyan() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Order::clear_has_quantity_delivered_cyan() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Order::clear_quantity_delivered_cyan() {
  quantity_delivered_cyan_ = 0u;
  clear_has_quantity_delivered_cyan();
}
inline ::google::protobuf::uint32 Order::quantity_delivered_cyan() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.quantity_delivered_cyan)
  return quantity_delivered_cyan_;
}
inline void Order::set_quantity_delivered_cyan(::google::protobuf::uint32 value) {
  set_has_quantity_delivered_cyan();
  quantity_delivered_cyan_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.quantity_delivered_cyan)
}

// required uint32 quantity_delivered_magenta = 8;
inline bool Order::has_quantity_delivered_magenta() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Order::set_has_quantity_delivered_magenta() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Order::clear_has_quantity_delivered_magenta() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Order::clear_quantity_delivered_magenta() {
  quantity_delivered_magenta_ = 0u;
  clear_has_quantity_delivered_magenta();
}
inline ::google::protobuf::uint32 Order::quantity_delivered_magenta() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.quantity_delivered_magenta)
  return quantity_delivered_magenta_;
}
inline void Order::set_quantity_delivered_magenta(::google::protobuf::uint32 value) {
  set_has_quantity_delivered_magenta();
  quantity_delivered_magenta_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.quantity_delivered_magenta)
}

// required uint32 delivery_period_begin = 9;
inline bool Order::has_delivery_period_begin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Order::set_has_delivery_period_begin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Order::clear_has_delivery_period_begin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Order::clear_delivery_period_begin() {
  delivery_period_begin_ = 0u;
  clear_has_delivery_period_begin();
}
inline ::google::protobuf::uint32 Order::delivery_period_begin() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.delivery_period_begin)
  return delivery_period_begin_;
}
inline void Order::set_delivery_period_begin(::google::protobuf::uint32 value) {
  set_has_delivery_period_begin();
  delivery_period_begin_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.delivery_period_begin)
}

// required uint32 delivery_period_end = 10;
inline bool Order::has_delivery_period_end() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Order::set_has_delivery_period_end() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Order::clear_has_delivery_period_end() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Order::clear_delivery_period_end() {
  delivery_period_end_ = 0u;
  clear_has_delivery_period_end();
}
inline ::google::protobuf::uint32 Order::delivery_period_end() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.delivery_period_end)
  return delivery_period_end_;
}
inline void Order::set_delivery_period_end(::google::protobuf::uint32 value) {
  set_has_delivery_period_end();
  delivery_period_end_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.delivery_period_end)
}

// required uint32 delivery_gate = 11;
inline bool Order::has_delivery_gate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Order::set_has_delivery_gate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Order::clear_has_delivery_gate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Order::clear_delivery_gate() {
  delivery_gate_ = 0u;
  clear_has_delivery_gate();
}
inline ::google::protobuf::uint32 Order::delivery_gate() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.delivery_gate)
  return delivery_gate_;
}
inline void Order::set_delivery_gate(::google::protobuf::uint32 value) {
  set_has_delivery_gate();
  delivery_gate_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.delivery_gate)
}

// repeated .llsf_msgs.UnconfirmedDelivery unconfirmed_deliveries = 12;
inline int Order::unconfirmed_deliveries_size() const {
  return unconfirmed_deliveries_.size();
}
inline void Order::clear_unconfirmed_deliveries() {
  unconfirmed_deliveries_.Clear();
}
inline ::llsf_msgs::UnconfirmedDelivery* Order::mutable_unconfirmed_deliveries(int index) {
  // @@protoc_insertion_point(field_mutable:llsf_msgs.Order.unconfirmed_deliveries)
  return unconfirmed_deliveries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::UnconfirmedDelivery >*
Order::mutable_unconfirmed_deliveries() {
  // @@protoc_insertion_point(field_mutable_list:llsf_msgs.Order.unconfirmed_deliveries)
  return &unconfirmed_deliveries_;
}
inline const ::llsf_msgs::UnconfirmedDelivery& Order::unconfirmed_deliveries(int index) const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.unconfirmed_deliveries)
  return unconfirmed_deliveries_.Get(index);
}
inline ::llsf_msgs::UnconfirmedDelivery* Order::add_unconfirmed_deliveries() {
  // @@protoc_insertion_point(field_add:llsf_msgs.Order.unconfirmed_deliveries)
  return unconfirmed_deliveries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::UnconfirmedDelivery >&
Order::unconfirmed_deliveries() const {
  // @@protoc_insertion_point(field_list:llsf_msgs.Order.unconfirmed_deliveries)
  return unconfirmed_deliveries_;
}

// required bool competitive = 13;
inline bool Order::has_competitive() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Order::set_has_competitive() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Order::clear_has_competitive() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Order::clear_competitive() {
  competitive_ = false;
  clear_has_competitive();
}
inline bool Order::competitive() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Order.competitive)
  return competitive_;
}
inline void Order::set_competitive(bool value) {
  set_has_competitive();
  competitive_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Order.competitive)
}

// -------------------------------------------------------------------

// OrderInfo

// repeated .llsf_msgs.Order orders = 1;
inline int OrderInfo::orders_size() const {
  return orders_.size();
}
inline void OrderInfo::clear_orders() {
  orders_.Clear();
}
inline ::llsf_msgs::Order* OrderInfo::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:llsf_msgs.OrderInfo.orders)
  return orders_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Order >*
OrderInfo::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:llsf_msgs.OrderInfo.orders)
  return &orders_;
}
inline const ::llsf_msgs::Order& OrderInfo::orders(int index) const {
  // @@protoc_insertion_point(field_get:llsf_msgs.OrderInfo.orders)
  return orders_.Get(index);
}
inline ::llsf_msgs::Order* OrderInfo::add_orders() {
  // @@protoc_insertion_point(field_add:llsf_msgs.OrderInfo.orders)
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Order >&
OrderInfo::orders() const {
  // @@protoc_insertion_point(field_list:llsf_msgs.OrderInfo.orders)
  return orders_;
}

// -------------------------------------------------------------------

// SetOrderDelivered

// required .llsf_msgs.Team team_color = 1;
inline bool SetOrderDelivered::has_team_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetOrderDelivered::set_has_team_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetOrderDelivered::clear_has_team_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetOrderDelivered::clear_team_color() {
  team_color_ = 0;
  clear_has_team_color();
}
inline ::llsf_msgs::Team SetOrderDelivered::team_color() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.SetOrderDelivered.team_color)
  return static_cast< ::llsf_msgs::Team >(team_color_);
}
inline void SetOrderDelivered::set_team_color(::llsf_msgs::Team value) {
  assert(::llsf_msgs::Team_IsValid(value));
  set_has_team_color();
  team_color_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.SetOrderDelivered.team_color)
}

// required uint32 order_id = 2;
inline bool SetOrderDelivered::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetOrderDelivered::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetOrderDelivered::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetOrderDelivered::clear_order_id() {
  order_id_ = 0u;
  clear_has_order_id();
}
inline ::google::protobuf::uint32 SetOrderDelivered::order_id() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.SetOrderDelivered.order_id)
  return order_id_;
}
inline void SetOrderDelivered::set_order_id(::google::protobuf::uint32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.SetOrderDelivered.order_id)
}

// -------------------------------------------------------------------

// ConfirmDelivery

// required uint32 delivery_id = 1;
inline bool ConfirmDelivery::has_delivery_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfirmDelivery::set_has_delivery_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfirmDelivery::clear_has_delivery_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfirmDelivery::clear_delivery_id() {
  delivery_id_ = 0u;
  clear_has_delivery_id();
}
inline ::google::protobuf::uint32 ConfirmDelivery::delivery_id() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ConfirmDelivery.delivery_id)
  return delivery_id_;
}
inline void ConfirmDelivery::set_delivery_id(::google::protobuf::uint32 value) {
  set_has_delivery_id();
  delivery_id_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.ConfirmDelivery.delivery_id)
}

// required bool correct = 2;
inline bool ConfirmDelivery::has_correct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfirmDelivery::set_has_correct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfirmDelivery::clear_has_correct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfirmDelivery::clear_correct() {
  correct_ = false;
  clear_has_correct();
}
inline bool ConfirmDelivery::correct() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ConfirmDelivery.correct)
  return correct_;
}
inline void ConfirmDelivery::set_correct(bool value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.ConfirmDelivery.correct)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_msgs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::llsf_msgs::UnconfirmedDelivery_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::UnconfirmedDelivery_CompType>() {
  return ::llsf_msgs::UnconfirmedDelivery_CompType_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::Order_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::Order_CompType>() {
  return ::llsf_msgs::Order_CompType_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::Order_Complexity> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::Order_Complexity>() {
  return ::llsf_msgs::Order_Complexity_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::OrderInfo_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::OrderInfo_CompType>() {
  return ::llsf_msgs::OrderInfo_CompType_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::SetOrderDelivered_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::SetOrderDelivered_CompType>() {
  return ::llsf_msgs::SetOrderDelivered_CompType_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::ConfirmDelivery_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::ConfirmDelivery_CompType>() {
  return ::llsf_msgs::ConfirmDelivery_CompType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_OrderInfo_2eproto
