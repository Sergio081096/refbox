// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AttentionMessage.proto

#ifndef PROTOBUF_INCLUDED_AttentionMessage_2eproto
#define PROTOBUF_INCLUDED_AttentionMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Team.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AttentionMessage_2eproto 

namespace protobuf_AttentionMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AttentionMessage_2eproto
namespace llsf_msgs {
class AttentionMessage;
class AttentionMessageDefaultTypeInternal;
extern AttentionMessageDefaultTypeInternal _AttentionMessage_default_instance_;
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> ::llsf_msgs::AttentionMessage* Arena::CreateMaybeMessage<::llsf_msgs::AttentionMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace llsf_msgs {

enum AttentionMessage_CompType {
  AttentionMessage_CompType_COMP_ID = 2000,
  AttentionMessage_CompType_MSG_TYPE = 2
};
bool AttentionMessage_CompType_IsValid(int value);
const AttentionMessage_CompType AttentionMessage_CompType_CompType_MIN = AttentionMessage_CompType_MSG_TYPE;
const AttentionMessage_CompType AttentionMessage_CompType_CompType_MAX = AttentionMessage_CompType_COMP_ID;
const int AttentionMessage_CompType_CompType_ARRAYSIZE = AttentionMessage_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AttentionMessage_CompType_descriptor();
inline const ::std::string& AttentionMessage_CompType_Name(AttentionMessage_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AttentionMessage_CompType_descriptor(), value);
}
inline bool AttentionMessage_CompType_Parse(
    const ::std::string& name, AttentionMessage_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AttentionMessage_CompType>(
    AttentionMessage_CompType_descriptor(), name, value);
}
// ===================================================================

class AttentionMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.AttentionMessage) */ {
 public:
  AttentionMessage();
  virtual ~AttentionMessage();

  AttentionMessage(const AttentionMessage& from);

  inline AttentionMessage& operator=(const AttentionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttentionMessage(AttentionMessage&& from) noexcept
    : AttentionMessage() {
    *this = ::std::move(from);
  }

  inline AttentionMessage& operator=(AttentionMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttentionMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttentionMessage* internal_default_instance() {
    return reinterpret_cast<const AttentionMessage*>(
               &_AttentionMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AttentionMessage* other);
  friend void swap(AttentionMessage& a, AttentionMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttentionMessage* New() const final {
    return CreateMaybeMessage<AttentionMessage>(NULL);
  }

  AttentionMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AttentionMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AttentionMessage& from);
  void MergeFrom(const AttentionMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttentionMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AttentionMessage_CompType CompType;
  static const CompType COMP_ID =
    AttentionMessage_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    AttentionMessage_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return AttentionMessage_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    AttentionMessage_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    AttentionMessage_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    AttentionMessage_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return AttentionMessage_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return AttentionMessage_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return AttentionMessage_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional float time_to_show = 2;
  bool has_time_to_show() const;
  void clear_time_to_show();
  static const int kTimeToShowFieldNumber = 2;
  float time_to_show() const;
  void set_time_to_show(float value);

  // optional .llsf_msgs.Team team_color = 3;
  bool has_team_color() const;
  void clear_team_color();
  static const int kTeamColorFieldNumber = 3;
  ::llsf_msgs::Team team_color() const;
  void set_team_color(::llsf_msgs::Team value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.AttentionMessage)
 private:
  void set_has_message();
  void clear_has_message();
  void set_has_time_to_show();
  void clear_has_time_to_show();
  void set_has_team_color();
  void clear_has_team_color();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  float time_to_show_;
  int team_color_;
  friend struct ::protobuf_AttentionMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AttentionMessage

// required string message = 1;
inline bool AttentionMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttentionMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttentionMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttentionMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& AttentionMessage::message() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.AttentionMessage.message)
  return message_.GetNoArena();
}
inline void AttentionMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:llsf_msgs.AttentionMessage.message)
}
#if LANG_CXX11
inline void AttentionMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:llsf_msgs.AttentionMessage.message)
}
#endif
inline void AttentionMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:llsf_msgs.AttentionMessage.message)
}
inline void AttentionMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:llsf_msgs.AttentionMessage.message)
}
inline ::std::string* AttentionMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:llsf_msgs.AttentionMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttentionMessage::release_message() {
  // @@protoc_insertion_point(field_release:llsf_msgs.AttentionMessage.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttentionMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:llsf_msgs.AttentionMessage.message)
}

// optional float time_to_show = 2;
inline bool AttentionMessage::has_time_to_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttentionMessage::set_has_time_to_show() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttentionMessage::clear_has_time_to_show() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttentionMessage::clear_time_to_show() {
  time_to_show_ = 0;
  clear_has_time_to_show();
}
inline float AttentionMessage::time_to_show() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.AttentionMessage.time_to_show)
  return time_to_show_;
}
inline void AttentionMessage::set_time_to_show(float value) {
  set_has_time_to_show();
  time_to_show_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.AttentionMessage.time_to_show)
}

// optional .llsf_msgs.Team team_color = 3;
inline bool AttentionMessage::has_team_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttentionMessage::set_has_team_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttentionMessage::clear_has_team_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttentionMessage::clear_team_color() {
  team_color_ = 0;
  clear_has_team_color();
}
inline ::llsf_msgs::Team AttentionMessage::team_color() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.AttentionMessage.team_color)
  return static_cast< ::llsf_msgs::Team >(team_color_);
}
inline void AttentionMessage::set_team_color(::llsf_msgs::Team value) {
  assert(::llsf_msgs::Team_IsValid(value));
  set_has_team_color();
  team_color_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.AttentionMessage.team_color)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_msgs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::llsf_msgs::AttentionMessage_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::AttentionMessage_CompType>() {
  return ::llsf_msgs::AttentionMessage_CompType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AttentionMessage_2eproto
