// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AttentionMessage.proto

#include "AttentionMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace llsf_msgs {
class AttentionMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttentionMessage>
      _instance;
} _AttentionMessage_default_instance_;
}  // namespace llsf_msgs
namespace protobuf_AttentionMessage_2eproto {
static void InitDefaultsAttentionMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_AttentionMessage_default_instance_;
    new (ptr) ::llsf_msgs::AttentionMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::AttentionMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttentionMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttentionMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AttentionMessage.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AttentionMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AttentionMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AttentionMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AttentionMessage, time_to_show_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::AttentionMessage, team_color_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::llsf_msgs::AttentionMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_AttentionMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "AttentionMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026AttentionMessage.proto\022\tllsf_msgs\032\nTea"
      "m.proto\"\206\001\n\020AttentionMessage\022\017\n\007message\030"
      "\001 \002(\t\022\024\n\014time_to_show\030\002 \001(\002\022#\n\nteam_colo"
      "r\030\003 \001(\0162\017.llsf_msgs.Team\"&\n\010CompType\022\014\n\007"
      "COMP_ID\020\320\017\022\014\n\010MSG_TYPE\020\002B9\n\037org.robocup_"
      "logistics.llsf_msgsB\026AttentionMessagePro"
      "tos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AttentionMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_Team_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AttentionMessage_2eproto
namespace llsf_msgs {
const ::google::protobuf::EnumDescriptor* AttentionMessage_CompType_descriptor() {
  protobuf_AttentionMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AttentionMessage_2eproto::file_level_enum_descriptors[0];
}
bool AttentionMessage_CompType_IsValid(int value) {
  switch (value) {
    case 2:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AttentionMessage_CompType AttentionMessage::COMP_ID;
const AttentionMessage_CompType AttentionMessage::MSG_TYPE;
const AttentionMessage_CompType AttentionMessage::CompType_MIN;
const AttentionMessage_CompType AttentionMessage::CompType_MAX;
const int AttentionMessage::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AttentionMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttentionMessage::kMessageFieldNumber;
const int AttentionMessage::kTimeToShowFieldNumber;
const int AttentionMessage::kTeamColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttentionMessage::AttentionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AttentionMessage_2eproto::scc_info_AttentionMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.AttentionMessage)
}
AttentionMessage::AttentionMessage(const AttentionMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&time_to_show_, &from.time_to_show_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_color_) -
    reinterpret_cast<char*>(&time_to_show_)) + sizeof(team_color_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.AttentionMessage)
}

void AttentionMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_to_show_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_color_) -
      reinterpret_cast<char*>(&time_to_show_)) + sizeof(team_color_));
}

AttentionMessage::~AttentionMessage() {
  // @@protoc_insertion_point(destructor:llsf_msgs.AttentionMessage)
  SharedDtor();
}

void AttentionMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttentionMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttentionMessage::descriptor() {
  ::protobuf_AttentionMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AttentionMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttentionMessage& AttentionMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AttentionMessage_2eproto::scc_info_AttentionMessage.base);
  return *internal_default_instance();
}


void AttentionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.AttentionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&time_to_show_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_color_) -
        reinterpret_cast<char*>(&time_to_show_)) + sizeof(team_color_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AttentionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.AttentionMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.AttentionMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float time_to_show = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_time_to_show();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_to_show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.Team team_color = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Team_IsValid(value)) {
            set_team_color(static_cast< ::llsf_msgs::Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.AttentionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.AttentionMessage)
  return false;
#undef DO_
}

void AttentionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.AttentionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.AttentionMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional float time_to_show = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->time_to_show(), output);
  }

  // optional .llsf_msgs.Team team_color = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->team_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.AttentionMessage)
}

::google::protobuf::uint8* AttentionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.AttentionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.AttentionMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional float time_to_show = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->time_to_show(), target);
  }

  // optional .llsf_msgs.Team team_color = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->team_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.AttentionMessage)
  return target;
}

size_t AttentionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.AttentionMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional float time_to_show = 2;
    if (has_time_to_show()) {
      total_size += 1 + 4;
    }

    // optional .llsf_msgs.Team team_color = 3;
    if (has_team_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttentionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.AttentionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AttentionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttentionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.AttentionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.AttentionMessage)
    MergeFrom(*source);
  }
}

void AttentionMessage::MergeFrom(const AttentionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.AttentionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_to_show_ = from.time_to_show_;
    }
    if (cached_has_bits & 0x00000004u) {
      team_color_ = from.team_color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AttentionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.AttentionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttentionMessage::CopyFrom(const AttentionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.AttentionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttentionMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AttentionMessage::Swap(AttentionMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttentionMessage::InternalSwap(AttentionMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_to_show_, other->time_to_show_);
  swap(team_color_, other->team_color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttentionMessage::GetMetadata() const {
  protobuf_AttentionMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AttentionMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::AttentionMessage* Arena::CreateMaybeMessage< ::llsf_msgs::AttentionMessage >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::AttentionMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
