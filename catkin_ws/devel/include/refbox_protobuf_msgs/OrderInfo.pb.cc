// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderInfo.proto

#include "OrderInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_OrderInfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OrderInfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Order;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OrderInfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UnconfirmedDelivery;
}  // namespace protobuf_OrderInfo_2eproto
namespace protobuf_Time_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Time_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Time;
}  // namespace protobuf_Time_2eproto
namespace llsf_msgs {
class UnconfirmedDeliveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnconfirmedDelivery>
      _instance;
} _UnconfirmedDelivery_default_instance_;
class OrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Order>
      _instance;
} _Order_default_instance_;
class OrderInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderInfo>
      _instance;
} _OrderInfo_default_instance_;
class SetOrderDeliveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetOrderDelivered>
      _instance;
} _SetOrderDelivered_default_instance_;
class ConfirmDeliveryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfirmDelivery>
      _instance;
} _ConfirmDelivery_default_instance_;
}  // namespace llsf_msgs
namespace protobuf_OrderInfo_2eproto {
static void InitDefaultsUnconfirmedDelivery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_UnconfirmedDelivery_default_instance_;
    new (ptr) ::llsf_msgs::UnconfirmedDelivery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::UnconfirmedDelivery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnconfirmedDelivery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnconfirmedDelivery}, {
      &protobuf_Time_2eproto::scc_info_Time.base,}};

static void InitDefaultsOrder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_Order_default_instance_;
    new (ptr) ::llsf_msgs::Order();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::Order::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Order =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrder}, {
      &protobuf_OrderInfo_2eproto::scc_info_UnconfirmedDelivery.base,}};

static void InitDefaultsOrderInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_OrderInfo_default_instance_;
    new (ptr) ::llsf_msgs::OrderInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::OrderInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderInfo}, {
      &protobuf_OrderInfo_2eproto::scc_info_Order.base,}};

static void InitDefaultsSetOrderDelivered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_SetOrderDelivered_default_instance_;
    new (ptr) ::llsf_msgs::SetOrderDelivered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::SetOrderDelivered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetOrderDelivered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetOrderDelivered}, {}};

static void InitDefaultsConfirmDelivery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_ConfirmDelivery_default_instance_;
    new (ptr) ::llsf_msgs::ConfirmDelivery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::ConfirmDelivery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfirmDelivery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfirmDelivery}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UnconfirmedDelivery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Order.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetOrderDelivered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfirmDelivery.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::UnconfirmedDelivery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::UnconfirmedDelivery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::UnconfirmedDelivery, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::UnconfirmedDelivery, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::UnconfirmedDelivery, delivery_time_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, complexity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, base_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, ring_colors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, cap_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, quantity_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, quantity_delivered_cyan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, quantity_delivered_magenta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, delivery_period_begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, delivery_period_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, delivery_gate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, unconfirmed_deliveries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Order, competitive_),
  0,
  1,
  9,
  ~0u,
  10,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::OrderInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::OrderInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::OrderInfo, orders_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::SetOrderDelivered, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::SetOrderDelivered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::SetOrderDelivered, team_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::SetOrderDelivered, order_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ConfirmDelivery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ConfirmDelivery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ConfirmDelivery, delivery_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::ConfirmDelivery, correct_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::llsf_msgs::UnconfirmedDelivery)},
  { 11, 29, sizeof(::llsf_msgs::Order)},
  { 42, 48, sizeof(::llsf_msgs::OrderInfo)},
  { 49, 56, sizeof(::llsf_msgs::SetOrderDelivered)},
  { 58, 65, sizeof(::llsf_msgs::ConfirmDelivery)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_UnconfirmedDelivery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_OrderInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_SetOrderDelivered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_ConfirmDelivery_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "OrderInfo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017OrderInfo.proto\022\tllsf_msgs\032\nTeam.proto"
      "\032\nTime.proto\032\022ProductColor.proto\"\220\001\n\023Unc"
      "onfirmedDelivery\022\n\n\002id\030\001 \002(\r\022\035\n\004team\030\002 \002"
      "(\0162\017.llsf_msgs.Team\022&\n\rdelivery_time\030\003 \002"
      "(\0132\017.llsf_msgs.Time\"&\n\010CompType\022\014\n\007COMP_"
      "ID\020\320\017\022\014\n\010MSG_TYPE\020-\"\240\004\n\005Order\022\n\n\002id\030\001 \002("
      "\r\022/\n\ncomplexity\030\002 \002(\0162\033.llsf_msgs.Order."
      "Complexity\022(\n\nbase_color\030\003 \002(\0162\024.llsf_ms"
      "gs.BaseColor\022)\n\013ring_colors\030\004 \003(\0162\024.llsf"
      "_msgs.RingColor\022&\n\tcap_color\030\005 \002(\0162\023.lls"
      "f_msgs.CapColor\022\032\n\022quantity_requested\030\006 "
      "\002(\r\022\037\n\027quantity_delivered_cyan\030\007 \002(\r\022\"\n\032"
      "quantity_delivered_magenta\030\010 \002(\r\022\035\n\025deli"
      "very_period_begin\030\t \002(\r\022\033\n\023delivery_peri"
      "od_end\030\n \002(\r\022\025\n\rdelivery_gate\030\013 \002(\r\022>\n\026u"
      "nconfirmed_deliveries\030\014 \003(\0132\036.llsf_msgs."
      "UnconfirmedDelivery\022\023\n\013competitive\030\r \002(\010"
      "\"&\n\010CompType\022\014\n\007COMP_ID\020\320\017\022\014\n\010MSG_TYPE\020*"
      "\",\n\nComplexity\022\006\n\002C0\020\000\022\006\n\002C1\020\001\022\006\n\002C2\020\002\022\006"
      "\n\002C3\020\003\"U\n\tOrderInfo\022 \n\006orders\030\001 \003(\0132\020.ll"
      "sf_msgs.Order\"&\n\010CompType\022\014\n\007COMP_ID\020\320\017\022"
      "\014\n\010MSG_TYPE\020)\"r\n\021SetOrderDelivered\022#\n\nte"
      "am_color\030\001 \002(\0162\017.llsf_msgs.Team\022\020\n\010order"
      "_id\030\002 \002(\r\"&\n\010CompType\022\014\n\007COMP_ID\020\320\017\022\014\n\010M"
      "SG_TYPE\020+\"_\n\017ConfirmDelivery\022\023\n\013delivery"
      "_id\030\001 \002(\r\022\017\n\007correct\030\002 \002(\010\"&\n\010CompType\022\014"
      "\n\007COMP_ID\020\320\017\022\014\n\010MSG_TYPE\020.B2\n\037org.robocu"
      "p_logistics.llsf_msgsB\017OrderInfoProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1118);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "OrderInfo.proto", &protobuf_RegisterTypes);
  ::protobuf_Team_2eproto::AddDescriptors();
  ::protobuf_Time_2eproto::AddDescriptors();
  ::protobuf_ProductColor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_OrderInfo_2eproto
namespace llsf_msgs {
const ::google::protobuf::EnumDescriptor* UnconfirmedDelivery_CompType_descriptor() {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrderInfo_2eproto::file_level_enum_descriptors[0];
}
bool UnconfirmedDelivery_CompType_IsValid(int value) {
  switch (value) {
    case 45:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnconfirmedDelivery_CompType UnconfirmedDelivery::COMP_ID;
const UnconfirmedDelivery_CompType UnconfirmedDelivery::MSG_TYPE;
const UnconfirmedDelivery_CompType UnconfirmedDelivery::CompType_MIN;
const UnconfirmedDelivery_CompType UnconfirmedDelivery::CompType_MAX;
const int UnconfirmedDelivery::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Order_CompType_descriptor() {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrderInfo_2eproto::file_level_enum_descriptors[1];
}
bool Order_CompType_IsValid(int value) {
  switch (value) {
    case 42:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Order_CompType Order::COMP_ID;
const Order_CompType Order::MSG_TYPE;
const Order_CompType Order::CompType_MIN;
const Order_CompType Order::CompType_MAX;
const int Order::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Order_Complexity_descriptor() {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrderInfo_2eproto::file_level_enum_descriptors[2];
}
bool Order_Complexity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Order_Complexity Order::C0;
const Order_Complexity Order::C1;
const Order_Complexity Order::C2;
const Order_Complexity Order::C3;
const Order_Complexity Order::Complexity_MIN;
const Order_Complexity Order::Complexity_MAX;
const int Order::Complexity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OrderInfo_CompType_descriptor() {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrderInfo_2eproto::file_level_enum_descriptors[3];
}
bool OrderInfo_CompType_IsValid(int value) {
  switch (value) {
    case 41:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OrderInfo_CompType OrderInfo::COMP_ID;
const OrderInfo_CompType OrderInfo::MSG_TYPE;
const OrderInfo_CompType OrderInfo::CompType_MIN;
const OrderInfo_CompType OrderInfo::CompType_MAX;
const int OrderInfo::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetOrderDelivered_CompType_descriptor() {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrderInfo_2eproto::file_level_enum_descriptors[4];
}
bool SetOrderDelivered_CompType_IsValid(int value) {
  switch (value) {
    case 43:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetOrderDelivered_CompType SetOrderDelivered::COMP_ID;
const SetOrderDelivered_CompType SetOrderDelivered::MSG_TYPE;
const SetOrderDelivered_CompType SetOrderDelivered::CompType_MIN;
const SetOrderDelivered_CompType SetOrderDelivered::CompType_MAX;
const int SetOrderDelivered::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ConfirmDelivery_CompType_descriptor() {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_OrderInfo_2eproto::file_level_enum_descriptors[5];
}
bool ConfirmDelivery_CompType_IsValid(int value) {
  switch (value) {
    case 46:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConfirmDelivery_CompType ConfirmDelivery::COMP_ID;
const ConfirmDelivery_CompType ConfirmDelivery::MSG_TYPE;
const ConfirmDelivery_CompType ConfirmDelivery::CompType_MIN;
const ConfirmDelivery_CompType ConfirmDelivery::CompType_MAX;
const int ConfirmDelivery::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void UnconfirmedDelivery::InitAsDefaultInstance() {
  ::llsf_msgs::_UnconfirmedDelivery_default_instance_._instance.get_mutable()->delivery_time_ = const_cast< ::llsf_msgs::Time*>(
      ::llsf_msgs::Time::internal_default_instance());
}
void UnconfirmedDelivery::clear_delivery_time() {
  if (delivery_time_ != NULL) delivery_time_->Clear();
  clear_has_delivery_time();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnconfirmedDelivery::kIdFieldNumber;
const int UnconfirmedDelivery::kTeamFieldNumber;
const int UnconfirmedDelivery::kDeliveryTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnconfirmedDelivery::UnconfirmedDelivery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OrderInfo_2eproto::scc_info_UnconfirmedDelivery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.UnconfirmedDelivery)
}
UnconfirmedDelivery::UnconfirmedDelivery(const UnconfirmedDelivery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_delivery_time()) {
    delivery_time_ = new ::llsf_msgs::Time(*from.delivery_time_);
  } else {
    delivery_time_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_) -
    reinterpret_cast<char*>(&id_)) + sizeof(team_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.UnconfirmedDelivery)
}

void UnconfirmedDelivery::SharedCtor() {
  ::memset(&delivery_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_) -
      reinterpret_cast<char*>(&delivery_time_)) + sizeof(team_));
}

UnconfirmedDelivery::~UnconfirmedDelivery() {
  // @@protoc_insertion_point(destructor:llsf_msgs.UnconfirmedDelivery)
  SharedDtor();
}

void UnconfirmedDelivery::SharedDtor() {
  if (this != internal_default_instance()) delete delivery_time_;
}

void UnconfirmedDelivery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnconfirmedDelivery::descriptor() {
  ::protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnconfirmedDelivery& UnconfirmedDelivery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OrderInfo_2eproto::scc_info_UnconfirmedDelivery.base);
  return *internal_default_instance();
}


void UnconfirmedDelivery::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.UnconfirmedDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(delivery_time_ != NULL);
    delivery_time_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_) -
        reinterpret_cast<char*>(&id_)) + sizeof(team_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnconfirmedDelivery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.UnconfirmedDelivery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.Team team = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Team_IsValid(value)) {
            set_team(static_cast< ::llsf_msgs::Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.Time delivery_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delivery_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.UnconfirmedDelivery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.UnconfirmedDelivery)
  return false;
#undef DO_
}

void UnconfirmedDelivery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.UnconfirmedDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .llsf_msgs.Team team = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->team(), output);
  }

  // required .llsf_msgs.Time delivery_time = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_delivery_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.UnconfirmedDelivery)
}

::google::protobuf::uint8* UnconfirmedDelivery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.UnconfirmedDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .llsf_msgs.Team team = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->team(), target);
  }

  // required .llsf_msgs.Time delivery_time = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_delivery_time(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.UnconfirmedDelivery)
  return target;
}

size_t UnconfirmedDelivery::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.UnconfirmedDelivery)
  size_t total_size = 0;

  if (has_delivery_time()) {
    // required .llsf_msgs.Time delivery_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *delivery_time_);
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_team()) {
    // required .llsf_msgs.Team team = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());
  }

  return total_size;
}
size_t UnconfirmedDelivery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.UnconfirmedDelivery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .llsf_msgs.Time delivery_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *delivery_time_);

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required .llsf_msgs.Team team = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnconfirmedDelivery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.UnconfirmedDelivery)
  GOOGLE_DCHECK_NE(&from, this);
  const UnconfirmedDelivery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnconfirmedDelivery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.UnconfirmedDelivery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.UnconfirmedDelivery)
    MergeFrom(*source);
  }
}

void UnconfirmedDelivery::MergeFrom(const UnconfirmedDelivery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.UnconfirmedDelivery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_delivery_time()->::llsf_msgs::Time::MergeFrom(from.delivery_time());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      team_ = from.team_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UnconfirmedDelivery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.UnconfirmedDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnconfirmedDelivery::CopyFrom(const UnconfirmedDelivery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.UnconfirmedDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnconfirmedDelivery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_delivery_time()) {
    if (!this->delivery_time_->IsInitialized()) return false;
  }
  return true;
}

void UnconfirmedDelivery::Swap(UnconfirmedDelivery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnconfirmedDelivery::InternalSwap(UnconfirmedDelivery* other) {
  using std::swap;
  swap(delivery_time_, other->delivery_time_);
  swap(id_, other->id_);
  swap(team_, other->team_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnconfirmedDelivery::GetMetadata() const {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Order::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kIdFieldNumber;
const int Order::kComplexityFieldNumber;
const int Order::kBaseColorFieldNumber;
const int Order::kRingColorsFieldNumber;
const int Order::kCapColorFieldNumber;
const int Order::kQuantityRequestedFieldNumber;
const int Order::kQuantityDeliveredCyanFieldNumber;
const int Order::kQuantityDeliveredMagentaFieldNumber;
const int Order::kDeliveryPeriodBeginFieldNumber;
const int Order::kDeliveryPeriodEndFieldNumber;
const int Order::kDeliveryGateFieldNumber;
const int Order::kUnconfirmedDeliveriesFieldNumber;
const int Order::kCompetitiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OrderInfo_2eproto::scc_info_Order.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ring_colors_(from.ring_colors_),
      unconfirmed_deliveries_(from.unconfirmed_deliveries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cap_color_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cap_color_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.Order)
}

void Order::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&competitive_) -
      reinterpret_cast<char*>(&id_)) + sizeof(competitive_));
  base_color_ = 1;
  cap_color_ = 1;
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:llsf_msgs.Order)
  SharedDtor();
}

void Order::SharedDtor() {
}

void Order::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  ::protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order& Order::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OrderInfo_2eproto::scc_info_Order.base);
  return *internal_default_instance();
}


void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ring_colors_.Clear();
  unconfirmed_deliveries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delivery_gate_) -
        reinterpret_cast<char*>(&id_)) + sizeof(delivery_gate_));
  }
  if (cached_has_bits & 1792u) {
    competitive_ = false;
    base_color_ = 1;
    cap_color_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.Order)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.Order.Complexity complexity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Order_Complexity_IsValid(value)) {
            set_complexity(static_cast< ::llsf_msgs::Order_Complexity >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.BaseColor base_color = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::BaseColor_IsValid(value)) {
            set_base_color(static_cast< ::llsf_msgs::BaseColor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.RingColor ring_colors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::RingColor_IsValid(value)) {
            add_ring_colors(static_cast< ::llsf_msgs::RingColor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::llsf_msgs::RingColor_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_ring_colors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.CapColor cap_color = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::CapColor_IsValid(value)) {
            set_cap_color(static_cast< ::llsf_msgs::CapColor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 quantity_requested = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_quantity_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 quantity_delivered_cyan = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_quantity_delivered_cyan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_delivered_cyan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 quantity_delivered_magenta = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_quantity_delivered_magenta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_delivered_magenta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 delivery_period_begin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_delivery_period_begin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delivery_period_begin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 delivery_period_end = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_delivery_period_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delivery_period_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 delivery_gate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_delivery_gate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delivery_gate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .llsf_msgs.UnconfirmedDelivery unconfirmed_deliveries = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_unconfirmed_deliveries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool competitive = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_competitive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &competitive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .llsf_msgs.Order.Complexity complexity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->complexity(), output);
  }

  // required .llsf_msgs.BaseColor base_color = 3;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->base_color(), output);
  }

  // repeated .llsf_msgs.RingColor ring_colors = 4;
  for (int i = 0, n = this->ring_colors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ring_colors(i), output);
  }

  // required .llsf_msgs.CapColor cap_color = 5;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->cap_color(), output);
  }

  // required uint32 quantity_requested = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->quantity_requested(), output);
  }

  // required uint32 quantity_delivered_cyan = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->quantity_delivered_cyan(), output);
  }

  // required uint32 quantity_delivered_magenta = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->quantity_delivered_magenta(), output);
  }

  // required uint32 delivery_period_begin = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->delivery_period_begin(), output);
  }

  // required uint32 delivery_period_end = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->delivery_period_end(), output);
  }

  // required uint32 delivery_gate = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->delivery_gate(), output);
  }

  // repeated .llsf_msgs.UnconfirmedDelivery unconfirmed_deliveries = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unconfirmed_deliveries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->unconfirmed_deliveries(static_cast<int>(i)),
      output);
  }

  // required bool competitive = 13;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->competitive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .llsf_msgs.Order.Complexity complexity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->complexity(), target);
  }

  // required .llsf_msgs.BaseColor base_color = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->base_color(), target);
  }

  // repeated .llsf_msgs.RingColor ring_colors = 4;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    4, this->ring_colors_, target);

  // required .llsf_msgs.CapColor cap_color = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->cap_color(), target);
  }

  // required uint32 quantity_requested = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->quantity_requested(), target);
  }

  // required uint32 quantity_delivered_cyan = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->quantity_delivered_cyan(), target);
  }

  // required uint32 quantity_delivered_magenta = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->quantity_delivered_magenta(), target);
  }

  // required uint32 delivery_period_begin = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->delivery_period_begin(), target);
  }

  // required uint32 delivery_period_end = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->delivery_period_end(), target);
  }

  // required uint32 delivery_gate = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->delivery_gate(), target);
  }

  // repeated .llsf_msgs.UnconfirmedDelivery unconfirmed_deliveries = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unconfirmed_deliveries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->unconfirmed_deliveries(static_cast<int>(i)), deterministic, target);
  }

  // required bool competitive = 13;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->competitive(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.Order)
  return target;
}

size_t Order::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.Order)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_complexity()) {
    // required .llsf_msgs.Order.Complexity complexity = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->complexity());
  }

  if (has_quantity_requested()) {
    // required uint32 quantity_requested = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_requested());
  }

  if (has_quantity_delivered_cyan()) {
    // required uint32 quantity_delivered_cyan = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_delivered_cyan());
  }

  if (has_quantity_delivered_magenta()) {
    // required uint32 quantity_delivered_magenta = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_delivered_magenta());
  }

  if (has_delivery_period_begin()) {
    // required uint32 delivery_period_begin = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_period_begin());
  }

  if (has_delivery_period_end()) {
    // required uint32 delivery_period_end = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_period_end());
  }

  if (has_delivery_gate()) {
    // required uint32 delivery_gate = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_gate());
  }

  if (has_competitive()) {
    // required bool competitive = 13;
    total_size += 1 + 1;
  }

  if (has_base_color()) {
    // required .llsf_msgs.BaseColor base_color = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->base_color());
  }

  if (has_cap_color()) {
    // required .llsf_msgs.CapColor cap_color = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cap_color());
  }

  return total_size;
}
size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.Order)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required .llsf_msgs.Order.Complexity complexity = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->complexity());

    // required uint32 quantity_requested = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_requested());

    // required uint32 quantity_delivered_cyan = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_delivered_cyan());

    // required uint32 quantity_delivered_magenta = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity_delivered_magenta());

    // required uint32 delivery_period_begin = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_period_begin());

    // required uint32 delivery_period_end = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_period_end());

    // required uint32 delivery_gate = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_gate());

    // required bool competitive = 13;
    total_size += 1 + 1;

    // required .llsf_msgs.BaseColor base_color = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->base_color());

    // required .llsf_msgs.CapColor cap_color = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cap_color());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .llsf_msgs.RingColor ring_colors = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->ring_colors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->ring_colors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .llsf_msgs.UnconfirmedDelivery unconfirmed_deliveries = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->unconfirmed_deliveries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->unconfirmed_deliveries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ring_colors_.MergeFrom(from.ring_colors_);
  unconfirmed_deliveries_.MergeFrom(from.unconfirmed_deliveries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      complexity_ = from.complexity_;
    }
    if (cached_has_bits & 0x00000004u) {
      quantity_requested_ = from.quantity_requested_;
    }
    if (cached_has_bits & 0x00000008u) {
      quantity_delivered_cyan_ = from.quantity_delivered_cyan_;
    }
    if (cached_has_bits & 0x00000010u) {
      quantity_delivered_magenta_ = from.quantity_delivered_magenta_;
    }
    if (cached_has_bits & 0x00000020u) {
      delivery_period_begin_ = from.delivery_period_begin_;
    }
    if (cached_has_bits & 0x00000040u) {
      delivery_period_end_ = from.delivery_period_end_;
    }
    if (cached_has_bits & 0x00000080u) {
      delivery_gate_ = from.delivery_gate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      competitive_ = from.competitive_;
    }
    if (cached_has_bits & 0x00000200u) {
      base_color_ = from.base_color_;
    }
    if (cached_has_bits & 0x00000400u) {
      cap_color_ = from.cap_color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->unconfirmed_deliveries())) return false;
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  using std::swap;
  ring_colors_.InternalSwap(&other->ring_colors_);
  CastToBase(&unconfirmed_deliveries_)->InternalSwap(CastToBase(&other->unconfirmed_deliveries_));
  swap(id_, other->id_);
  swap(complexity_, other->complexity_);
  swap(quantity_requested_, other->quantity_requested_);
  swap(quantity_delivered_cyan_, other->quantity_delivered_cyan_);
  swap(quantity_delivered_magenta_, other->quantity_delivered_magenta_);
  swap(delivery_period_begin_, other->delivery_period_begin_);
  swap(delivery_period_end_, other->delivery_period_end_);
  swap(delivery_gate_, other->delivery_gate_);
  swap(competitive_, other->competitive_);
  swap(base_color_, other->base_color_);
  swap(cap_color_, other->cap_color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderInfo::kOrdersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderInfo::OrderInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OrderInfo_2eproto::scc_info_OrderInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.OrderInfo)
}
OrderInfo::OrderInfo(const OrderInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      orders_(from.orders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.OrderInfo)
}

void OrderInfo::SharedCtor() {
}

OrderInfo::~OrderInfo() {
  // @@protoc_insertion_point(destructor:llsf_msgs.OrderInfo)
  SharedDtor();
}

void OrderInfo::SharedDtor() {
}

void OrderInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderInfo::descriptor() {
  ::protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderInfo& OrderInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OrderInfo_2eproto::scc_info_OrderInfo.base);
  return *internal_default_instance();
}


void OrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.OrderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.OrderInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .llsf_msgs.Order orders = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.OrderInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.OrderInfo)
  return false;
#undef DO_
}

void OrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.OrderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .llsf_msgs.Order orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->orders(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.OrderInfo)
}

::google::protobuf::uint8* OrderInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.OrderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .llsf_msgs.Order orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->orders(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.OrderInfo)
  return target;
}

size_t OrderInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.OrderInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .llsf_msgs.Order orders = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.OrderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.OrderInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.OrderInfo)
    MergeFrom(*source);
  }
}

void OrderInfo::MergeFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.OrderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
}

void OrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.OrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderInfo::CopyFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.OrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->orders())) return false;
  return true;
}

void OrderInfo::Swap(OrderInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderInfo::InternalSwap(OrderInfo* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderInfo::GetMetadata() const {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetOrderDelivered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOrderDelivered::kTeamColorFieldNumber;
const int SetOrderDelivered::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOrderDelivered::SetOrderDelivered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OrderInfo_2eproto::scc_info_SetOrderDelivered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.SetOrderDelivered)
}
SetOrderDelivered::SetOrderDelivered(const SetOrderDelivered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_color_, &from.team_color_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_id_) -
    reinterpret_cast<char*>(&team_color_)) + sizeof(order_id_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.SetOrderDelivered)
}

void SetOrderDelivered::SharedCtor() {
  ::memset(&team_color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_id_) -
      reinterpret_cast<char*>(&team_color_)) + sizeof(order_id_));
}

SetOrderDelivered::~SetOrderDelivered() {
  // @@protoc_insertion_point(destructor:llsf_msgs.SetOrderDelivered)
  SharedDtor();
}

void SetOrderDelivered::SharedDtor() {
}

void SetOrderDelivered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetOrderDelivered::descriptor() {
  ::protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOrderDelivered& SetOrderDelivered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OrderInfo_2eproto::scc_info_SetOrderDelivered.base);
  return *internal_default_instance();
}


void SetOrderDelivered::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.SetOrderDelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&team_color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&order_id_) -
        reinterpret_cast<char*>(&team_color_)) + sizeof(order_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetOrderDelivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.SetOrderDelivered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .llsf_msgs.Team team_color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Team_IsValid(value)) {
            set_team_color(static_cast< ::llsf_msgs::Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_order_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.SetOrderDelivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.SetOrderDelivered)
  return false;
#undef DO_
}

void SetOrderDelivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.SetOrderDelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.Team team_color = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->team_color(), output);
  }

  // required uint32 order_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->order_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.SetOrderDelivered)
}

::google::protobuf::uint8* SetOrderDelivered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.SetOrderDelivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .llsf_msgs.Team team_color = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->team_color(), target);
  }

  // required uint32 order_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->order_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.SetOrderDelivered)
  return target;
}

size_t SetOrderDelivered::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.SetOrderDelivered)
  size_t total_size = 0;

  if (has_team_color()) {
    // required .llsf_msgs.Team team_color = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());
  }

  if (has_order_id()) {
    // required uint32 order_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  return total_size;
}
size_t SetOrderDelivered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.SetOrderDelivered)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .llsf_msgs.Team team_color = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());

    // required uint32 order_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetOrderDelivered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.SetOrderDelivered)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOrderDelivered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOrderDelivered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.SetOrderDelivered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.SetOrderDelivered)
    MergeFrom(*source);
  }
}

void SetOrderDelivered::MergeFrom(const SetOrderDelivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.SetOrderDelivered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      team_color_ = from.team_color_;
    }
    if (cached_has_bits & 0x00000002u) {
      order_id_ = from.order_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetOrderDelivered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.SetOrderDelivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOrderDelivered::CopyFrom(const SetOrderDelivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.SetOrderDelivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOrderDelivered::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SetOrderDelivered::Swap(SetOrderDelivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOrderDelivered::InternalSwap(SetOrderDelivered* other) {
  using std::swap;
  swap(team_color_, other->team_color_);
  swap(order_id_, other->order_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetOrderDelivered::GetMetadata() const {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfirmDelivery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmDelivery::kDeliveryIdFieldNumber;
const int ConfirmDelivery::kCorrectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmDelivery::ConfirmDelivery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_OrderInfo_2eproto::scc_info_ConfirmDelivery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.ConfirmDelivery)
}
ConfirmDelivery::ConfirmDelivery(const ConfirmDelivery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&delivery_id_, &from.delivery_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&correct_) -
    reinterpret_cast<char*>(&delivery_id_)) + sizeof(correct_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.ConfirmDelivery)
}

void ConfirmDelivery::SharedCtor() {
  ::memset(&delivery_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correct_) -
      reinterpret_cast<char*>(&delivery_id_)) + sizeof(correct_));
}

ConfirmDelivery::~ConfirmDelivery() {
  // @@protoc_insertion_point(destructor:llsf_msgs.ConfirmDelivery)
  SharedDtor();
}

void ConfirmDelivery::SharedDtor() {
}

void ConfirmDelivery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfirmDelivery::descriptor() {
  ::protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmDelivery& ConfirmDelivery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_OrderInfo_2eproto::scc_info_ConfirmDelivery.base);
  return *internal_default_instance();
}


void ConfirmDelivery::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.ConfirmDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&delivery_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&correct_) -
        reinterpret_cast<char*>(&delivery_id_)) + sizeof(correct_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfirmDelivery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.ConfirmDelivery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 delivery_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_delivery_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delivery_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool correct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_correct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &correct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.ConfirmDelivery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.ConfirmDelivery)
  return false;
#undef DO_
}

void ConfirmDelivery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.ConfirmDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 delivery_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->delivery_id(), output);
  }

  // required bool correct = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->correct(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.ConfirmDelivery)
}

::google::protobuf::uint8* ConfirmDelivery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.ConfirmDelivery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 delivery_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->delivery_id(), target);
  }

  // required bool correct = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->correct(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.ConfirmDelivery)
  return target;
}

size_t ConfirmDelivery::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.ConfirmDelivery)
  size_t total_size = 0;

  if (has_delivery_id()) {
    // required uint32 delivery_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_id());
  }

  if (has_correct()) {
    // required bool correct = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ConfirmDelivery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.ConfirmDelivery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 delivery_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delivery_id());

    // required bool correct = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfirmDelivery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.ConfirmDelivery)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmDelivery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmDelivery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.ConfirmDelivery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.ConfirmDelivery)
    MergeFrom(*source);
  }
}

void ConfirmDelivery::MergeFrom(const ConfirmDelivery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.ConfirmDelivery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      delivery_id_ = from.delivery_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      correct_ = from.correct_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfirmDelivery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.ConfirmDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmDelivery::CopyFrom(const ConfirmDelivery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.ConfirmDelivery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmDelivery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConfirmDelivery::Swap(ConfirmDelivery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmDelivery::InternalSwap(ConfirmDelivery* other) {
  using std::swap;
  swap(delivery_id_, other->delivery_id_);
  swap(correct_, other->correct_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfirmDelivery::GetMetadata() const {
  protobuf_OrderInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_OrderInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::UnconfirmedDelivery* Arena::CreateMaybeMessage< ::llsf_msgs::UnconfirmedDelivery >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::UnconfirmedDelivery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::Order* Arena::CreateMaybeMessage< ::llsf_msgs::Order >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::Order >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::OrderInfo* Arena::CreateMaybeMessage< ::llsf_msgs::OrderInfo >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::OrderInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::SetOrderDelivered* Arena::CreateMaybeMessage< ::llsf_msgs::SetOrderDelivered >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::SetOrderDelivered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::ConfirmDelivery* Arena::CreateMaybeMessage< ::llsf_msgs::ConfirmDelivery >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::ConfirmDelivery >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
