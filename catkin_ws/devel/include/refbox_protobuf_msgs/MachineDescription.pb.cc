// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MachineDescription.proto

#include "MachineDescription.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace llsf_msgs {
}  // namespace llsf_msgs
namespace protobuf_MachineDescription_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "MachineDescription.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030MachineDescription.proto\022\tllsf_msgs*,\n"
      "\nLightColor\022\007\n\003RED\020\000\022\n\n\006YELLOW\020\001\022\t\n\005GREE"
      "N\020\002*(\n\nLightState\022\007\n\003OFF\020\000\022\006\n\002ON\020\001\022\t\n\005BL"
      "INK\020\002*0\n\004SSOp\022\t\n\005STORE\020\001\022\014\n\010RETRIEVE\020\002\022\017"
      "\n\013CHANGE_INFO\020\003*\'\n\004CSOp\022\020\n\014RETRIEVE_CAP\020"
      "\001\022\r\n\tMOUNT_CAP\020\002B;\n\037org.robocup_logistic"
      "s.llsf_msgsB\030MachineDescriptionProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MachineDescription.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_MachineDescription_2eproto
namespace llsf_msgs {
const ::google::protobuf::EnumDescriptor* LightColor_descriptor() {
  protobuf_MachineDescription_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MachineDescription_2eproto::file_level_enum_descriptors[0];
}
bool LightColor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LightState_descriptor() {
  protobuf_MachineDescription_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MachineDescription_2eproto::file_level_enum_descriptors[1];
}
bool LightState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SSOp_descriptor() {
  protobuf_MachineDescription_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MachineDescription_2eproto::file_level_enum_descriptors[2];
}
bool SSOp_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CSOp_descriptor() {
  protobuf_MachineDescription_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MachineDescription_2eproto::file_level_enum_descriptors[3];
}
bool CSOp_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
