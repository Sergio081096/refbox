// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RobotInfo.proto

#include "RobotInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Pose2D_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Pose2D_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Pose2D;
}  // namespace protobuf_Pose2D_2eproto
namespace protobuf_RobotInfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RobotInfo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Robot;
}  // namespace protobuf_RobotInfo_2eproto
namespace protobuf_Time_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Time_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Time;
}  // namespace protobuf_Time_2eproto
namespace llsf_msgs {
class RobotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Robot>
      _instance;
} _Robot_default_instance_;
class RobotInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotInfo>
      _instance;
} _RobotInfo_default_instance_;
}  // namespace llsf_msgs
namespace protobuf_RobotInfo_2eproto {
static void InitDefaultsRobot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_Robot_default_instance_;
    new (ptr) ::llsf_msgs::Robot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::Robot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Robot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRobot}, {
      &protobuf_Time_2eproto::scc_info_Time.base,
      &protobuf_Pose2D_2eproto::scc_info_Pose2D.base,}};

static void InitDefaultsRobotInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::llsf_msgs::_RobotInfo_default_instance_;
    new (ptr) ::llsf_msgs::RobotInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::llsf_msgs::RobotInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RobotInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRobotInfo}, {
      &protobuf_RobotInfo_2eproto::scc_info_Robot.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Robot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotInfo.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, team_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, last_seen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, vision_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, maintenance_time_remaining_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::Robot, maintenance_cycles_),
  0,
  1,
  9,
  6,
  2,
  3,
  4,
  5,
  10,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::RobotInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::RobotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::llsf_msgs::RobotInfo, robots_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::llsf_msgs::Robot)},
  { 27, 33, sizeof(::llsf_msgs::RobotInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_Robot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::llsf_msgs::_RobotInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "RobotInfo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017RobotInfo.proto\022\tllsf_msgs\032\nTime.proto"
      "\032\014Pose2D.proto\032\nTeam.proto\"\344\002\n\005Robot\022\014\n\004"
      "name\030\001 \002(\t\022\014\n\004team\030\002 \002(\t\022#\n\nteam_color\030\014"
      " \002(\0162\017.llsf_msgs.Team\022\016\n\006number\030\007 \002(\r\022\014\n"
      "\004host\030\003 \002(\t\022\"\n\tlast_seen\030\004 \002(\0132\017.llsf_ms"
      "gs.Time\022\037\n\004pose\030\006 \001(\0132\021.llsf_msgs.Pose2D"
      "\022&\n\013vision_pose\030\013 \001(\0132\021.llsf_msgs.Pose2D"
      "\022$\n\005state\030\010 \001(\0162\025.llsf_msgs.RobotState\022%"
      "\n\032maintenance_time_remaining\030\t \001(\002:\0010\022\032\n"
      "\022maintenance_cycles\030\n \001(\r\"&\n\010CompType\022\014\n"
      "\007COMP_ID\020\320\017\022\014\n\010MSG_TYPE\020\037\"U\n\tRobotInfo\022 "
      "\n\006robots\030\001 \003(\0132\020.llsf_msgs.Robot\"&\n\010Comp"
      "Type\022\014\n\007COMP_ID\020\320\017\022\014\n\010MSG_TYPE\020\036*;\n\nRobo"
      "tState\022\n\n\006ACTIVE\020\001\022\017\n\013MAINTENANCE\020\002\022\020\n\014D"
      "ISQUALIFIED\020\003B2\n\037org.robocup_logistics.l"
      "lsf_msgsB\017RobotInfoProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 625);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RobotInfo.proto", &protobuf_RegisterTypes);
  ::protobuf_Time_2eproto::AddDescriptors();
  ::protobuf_Pose2D_2eproto::AddDescriptors();
  ::protobuf_Team_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_RobotInfo_2eproto
namespace llsf_msgs {
const ::google::protobuf::EnumDescriptor* Robot_CompType_descriptor() {
  protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_RobotInfo_2eproto::file_level_enum_descriptors[0];
}
bool Robot_CompType_IsValid(int value) {
  switch (value) {
    case 31:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Robot_CompType Robot::COMP_ID;
const Robot_CompType Robot::MSG_TYPE;
const Robot_CompType Robot::CompType_MIN;
const Robot_CompType Robot::CompType_MAX;
const int Robot::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotInfo_CompType_descriptor() {
  protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_RobotInfo_2eproto::file_level_enum_descriptors[1];
}
bool RobotInfo_CompType_IsValid(int value) {
  switch (value) {
    case 30:
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotInfo_CompType RobotInfo::COMP_ID;
const RobotInfo_CompType RobotInfo::MSG_TYPE;
const RobotInfo_CompType RobotInfo::CompType_MIN;
const RobotInfo_CompType RobotInfo::CompType_MAX;
const int RobotInfo::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotState_descriptor() {
  protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_RobotInfo_2eproto::file_level_enum_descriptors[2];
}
bool RobotState_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Robot::InitAsDefaultInstance() {
  ::llsf_msgs::_Robot_default_instance_._instance.get_mutable()->last_seen_ = const_cast< ::llsf_msgs::Time*>(
      ::llsf_msgs::Time::internal_default_instance());
  ::llsf_msgs::_Robot_default_instance_._instance.get_mutable()->pose_ = const_cast< ::llsf_msgs::Pose2D*>(
      ::llsf_msgs::Pose2D::internal_default_instance());
  ::llsf_msgs::_Robot_default_instance_._instance.get_mutable()->vision_pose_ = const_cast< ::llsf_msgs::Pose2D*>(
      ::llsf_msgs::Pose2D::internal_default_instance());
}
void Robot::clear_last_seen() {
  if (last_seen_ != NULL) last_seen_->Clear();
  clear_has_last_seen();
}
void Robot::clear_pose() {
  if (pose_ != NULL) pose_->Clear();
  clear_has_pose();
}
void Robot::clear_vision_pose() {
  if (vision_pose_ != NULL) vision_pose_->Clear();
  clear_has_vision_pose();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Robot::kNameFieldNumber;
const int Robot::kTeamFieldNumber;
const int Robot::kTeamColorFieldNumber;
const int Robot::kNumberFieldNumber;
const int Robot::kHostFieldNumber;
const int Robot::kLastSeenFieldNumber;
const int Robot::kPoseFieldNumber;
const int Robot::kVisionPoseFieldNumber;
const int Robot::kStateFieldNumber;
const int Robot::kMaintenanceTimeRemainingFieldNumber;
const int Robot::kMaintenanceCyclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Robot::Robot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RobotInfo_2eproto::scc_info_Robot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.Robot)
}
Robot::Robot(const Robot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_team()) {
    team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.has_last_seen()) {
    last_seen_ = new ::llsf_msgs::Time(*from.last_seen_);
  } else {
    last_seen_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::llsf_msgs::Pose2D(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_vision_pose()) {
    vision_pose_ = new ::llsf_msgs::Pose2D(*from.vision_pose_);
  } else {
    vision_pose_ = NULL;
  }
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&number_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.Robot)
}

void Robot::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_seen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_color_) -
      reinterpret_cast<char*>(&last_seen_)) + sizeof(team_color_));
  state_ = 1;
}

Robot::~Robot() {
  // @@protoc_insertion_point(destructor:llsf_msgs.Robot)
  SharedDtor();
}

void Robot::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete last_seen_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete vision_pose_;
}

void Robot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Robot::descriptor() {
  ::protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RobotInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Robot& Robot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RobotInfo_2eproto::scc_info_Robot.base);
  return *internal_default_instance();
}


void Robot::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.Robot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      team_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      host_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(last_seen_ != NULL);
      last_seen_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(pose_ != NULL);
      pose_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(vision_pose_ != NULL);
      vision_pose_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maintenance_time_remaining_) -
        reinterpret_cast<char*>(&number_)) + sizeof(maintenance_time_remaining_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&maintenance_cycles_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_color_) -
        reinterpret_cast<char*>(&maintenance_cycles_)) + sizeof(team_color_));
    state_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Robot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.Robot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Robot.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string team = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->team().data(), static_cast<int>(this->team().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Robot.team");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string host = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "llsf_msgs.Robot.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.Time last_seen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_seen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.Pose2D pose = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 number = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.RobotState state = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::RobotState_IsValid(value)) {
            set_state(static_cast< ::llsf_msgs::RobotState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float maintenance_time_remaining = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_maintenance_time_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maintenance_time_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 maintenance_cycles = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_maintenance_cycles();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maintenance_cycles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .llsf_msgs.Pose2D vision_pose = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vision_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .llsf_msgs.Team team_color = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_msgs::Team_IsValid(value)) {
            set_team_color(static_cast< ::llsf_msgs::Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.Robot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.Robot)
  return false;
#undef DO_
}

void Robot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.Robot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Robot.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string team = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Robot.team");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->team(), output);
  }

  // required string host = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Robot.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->host(), output);
  }

  // required .llsf_msgs.Time last_seen = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_last_seen(), output);
  }

  // optional .llsf_msgs.Pose2D pose = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_pose(), output);
  }

  // required uint32 number = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->number(), output);
  }

  // optional .llsf_msgs.RobotState state = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->state(), output);
  }

  // optional float maintenance_time_remaining = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->maintenance_time_remaining(), output);
  }

  // optional uint32 maintenance_cycles = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->maintenance_cycles(), output);
  }

  // optional .llsf_msgs.Pose2D vision_pose = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_vision_pose(), output);
  }

  // required .llsf_msgs.Team team_color = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->team_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.Robot)
}

::google::protobuf::uint8* Robot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.Robot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Robot.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string team = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Robot.team");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team(), target);
  }

  // required string host = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "llsf_msgs.Robot.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->host(), target);
  }

  // required .llsf_msgs.Time last_seen = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_last_seen(), deterministic, target);
  }

  // optional .llsf_msgs.Pose2D pose = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_pose(), deterministic, target);
  }

  // required uint32 number = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->number(), target);
  }

  // optional .llsf_msgs.RobotState state = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->state(), target);
  }

  // optional float maintenance_time_remaining = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->maintenance_time_remaining(), target);
  }

  // optional uint32 maintenance_cycles = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->maintenance_cycles(), target);
  }

  // optional .llsf_msgs.Pose2D vision_pose = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_vision_pose(), deterministic, target);
  }

  // required .llsf_msgs.Team team_color = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->team_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.Robot)
  return target;
}

size_t Robot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:llsf_msgs.Robot)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_team()) {
    // required string team = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team());
  }

  if (has_host()) {
    // required string host = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  if (has_last_seen()) {
    // required .llsf_msgs.Time last_seen = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_seen_);
  }

  if (has_number()) {
    // required uint32 number = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  if (has_team_color()) {
    // required .llsf_msgs.Team team_color = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());
  }

  return total_size;
}
size_t Robot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.Robot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000024f) ^ 0x0000024f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string team = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team());

    // required string host = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());

    // required .llsf_msgs.Time last_seen = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_seen_);

    // required uint32 number = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());

    // required .llsf_msgs.Team team_color = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 48u) {
    // optional .llsf_msgs.Pose2D pose = 6;
    if (has_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pose_);
    }

    // optional .llsf_msgs.Pose2D vision_pose = 11;
    if (has_vision_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vision_pose_);
    }

  }
  // optional float maintenance_time_remaining = 9 [default = 0];
  if (has_maintenance_time_remaining()) {
    total_size += 1 + 4;
  }

  // optional uint32 maintenance_cycles = 10;
  if (has_maintenance_cycles()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maintenance_cycles());
  }

  // optional .llsf_msgs.RobotState state = 8;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Robot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.Robot)
  GOOGLE_DCHECK_NE(&from, this);
  const Robot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Robot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.Robot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.Robot)
    MergeFrom(*source);
  }
}

void Robot::MergeFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.Robot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_team();
      team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_last_seen()->::llsf_msgs::Time::MergeFrom(from.last_seen());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_pose()->::llsf_msgs::Pose2D::MergeFrom(from.pose());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_vision_pose()->::llsf_msgs::Pose2D::MergeFrom(from.vision_pose());
    }
    if (cached_has_bits & 0x00000040u) {
      number_ = from.number_;
    }
    if (cached_has_bits & 0x00000080u) {
      maintenance_time_remaining_ = from.maintenance_time_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      maintenance_cycles_ = from.maintenance_cycles_;
    }
    if (cached_has_bits & 0x00000200u) {
      team_color_ = from.team_color_;
    }
    if (cached_has_bits & 0x00000400u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Robot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Robot::CopyFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000024f) != 0x0000024f) return false;
  if (has_last_seen()) {
    if (!this->last_seen_->IsInitialized()) return false;
  }
  if (has_pose()) {
    if (!this->pose_->IsInitialized()) return false;
  }
  if (has_vision_pose()) {
    if (!this->vision_pose_->IsInitialized()) return false;
  }
  return true;
}

void Robot::Swap(Robot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Robot::InternalSwap(Robot* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  team_.Swap(&other->team_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_seen_, other->last_seen_);
  swap(pose_, other->pose_);
  swap(vision_pose_, other->vision_pose_);
  swap(number_, other->number_);
  swap(maintenance_time_remaining_, other->maintenance_time_remaining_);
  swap(maintenance_cycles_, other->maintenance_cycles_);
  swap(team_color_, other->team_color_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Robot::GetMetadata() const {
  protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RobotInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RobotInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotInfo::kRobotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotInfo::RobotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_RobotInfo_2eproto::scc_info_RobotInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:llsf_msgs.RobotInfo)
}
RobotInfo::RobotInfo(const RobotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:llsf_msgs.RobotInfo)
}

void RobotInfo::SharedCtor() {
}

RobotInfo::~RobotInfo() {
  // @@protoc_insertion_point(destructor:llsf_msgs.RobotInfo)
  SharedDtor();
}

void RobotInfo::SharedDtor() {
}

void RobotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RobotInfo::descriptor() {
  ::protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RobotInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotInfo& RobotInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_RobotInfo_2eproto::scc_info_RobotInfo.base);
  return *internal_default_instance();
}


void RobotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:llsf_msgs.RobotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RobotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:llsf_msgs.RobotInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .llsf_msgs.Robot robots = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_robots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:llsf_msgs.RobotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:llsf_msgs.RobotInfo)
  return false;
#undef DO_
}

void RobotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:llsf_msgs.RobotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .llsf_msgs.Robot robots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->robots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->robots(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:llsf_msgs.RobotInfo)
}

::google::protobuf::uint8* RobotInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:llsf_msgs.RobotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .llsf_msgs.Robot robots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->robots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->robots(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:llsf_msgs.RobotInfo)
  return target;
}

size_t RobotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:llsf_msgs.RobotInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .llsf_msgs.Robot robots = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->robots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->robots(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:llsf_msgs.RobotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:llsf_msgs.RobotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:llsf_msgs.RobotInfo)
    MergeFrom(*source);
  }
}

void RobotInfo::MergeFrom(const RobotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:llsf_msgs.RobotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  robots_.MergeFrom(from.robots_);
}

void RobotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:llsf_msgs.RobotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotInfo::CopyFrom(const RobotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:llsf_msgs.RobotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->robots())) return false;
  return true;
}

void RobotInfo::Swap(RobotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotInfo::InternalSwap(RobotInfo* other) {
  using std::swap;
  CastToBase(&robots_)->InternalSwap(CastToBase(&other->robots_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RobotInfo::GetMetadata() const {
  protobuf_RobotInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_RobotInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::Robot* Arena::CreateMaybeMessage< ::llsf_msgs::Robot >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::Robot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::llsf_msgs::RobotInfo* Arena::CreateMaybeMessage< ::llsf_msgs::RobotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::llsf_msgs::RobotInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
