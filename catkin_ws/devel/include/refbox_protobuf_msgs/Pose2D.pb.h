// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Pose2D.proto

#ifndef PROTOBUF_INCLUDED_Pose2D_2eproto
#define PROTOBUF_INCLUDED_Pose2D_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Time.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Pose2D_2eproto 

namespace protobuf_Pose2D_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Pose2D_2eproto
namespace llsf_msgs {
class Pose2D;
class Pose2DDefaultTypeInternal;
extern Pose2DDefaultTypeInternal _Pose2D_default_instance_;
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> ::llsf_msgs::Pose2D* Arena::CreateMaybeMessage<::llsf_msgs::Pose2D>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace llsf_msgs {

// ===================================================================

class Pose2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.Pose2D) */ {
 public:
  Pose2D();
  virtual ~Pose2D();

  Pose2D(const Pose2D& from);

  inline Pose2D& operator=(const Pose2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pose2D(Pose2D&& from) noexcept
    : Pose2D() {
    *this = ::std::move(from);
  }

  inline Pose2D& operator=(Pose2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pose2D* internal_default_instance() {
    return reinterpret_cast<const Pose2D*>(
               &_Pose2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Pose2D* other);
  friend void swap(Pose2D& a, Pose2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pose2D* New() const final {
    return CreateMaybeMessage<Pose2D>(NULL);
  }

  Pose2D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pose2D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pose2D& from);
  void MergeFrom(const Pose2D& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pose2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .llsf_msgs.Time timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  private:
  const ::llsf_msgs::Time& _internal_timestamp() const;
  public:
  const ::llsf_msgs::Time& timestamp() const;
  ::llsf_msgs::Time* release_timestamp();
  ::llsf_msgs::Time* mutable_timestamp();
  void set_allocated_timestamp(::llsf_msgs::Time* timestamp);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float ori = 4;
  bool has_ori() const;
  void clear_ori();
  static const int kOriFieldNumber = 4;
  float ori() const;
  void set_ori(float value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.Pose2D)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_ori();
  void clear_has_ori();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::llsf_msgs::Time* timestamp_;
  float x_;
  float y_;
  float ori_;
  friend struct ::protobuf_Pose2D_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Pose2D

// required .llsf_msgs.Time timestamp = 1;
inline bool Pose2D::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pose2D::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pose2D::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::llsf_msgs::Time& Pose2D::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::llsf_msgs::Time& Pose2D::timestamp() const {
  const ::llsf_msgs::Time* p = timestamp_;
  // @@protoc_insertion_point(field_get:llsf_msgs.Pose2D.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::llsf_msgs::Time*>(
      &::llsf_msgs::_Time_default_instance_);
}
inline ::llsf_msgs::Time* Pose2D::release_timestamp() {
  // @@protoc_insertion_point(field_release:llsf_msgs.Pose2D.timestamp)
  clear_has_timestamp();
  ::llsf_msgs::Time* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::llsf_msgs::Time* Pose2D::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::llsf_msgs::Time>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:llsf_msgs.Pose2D.timestamp)
  return timestamp_;
}
inline void Pose2D::set_allocated_timestamp(::llsf_msgs::Time* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:llsf_msgs.Pose2D.timestamp)
}

// required float x = 2;
inline bool Pose2D::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pose2D::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pose2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pose2D::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Pose2D::x() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Pose2D.x)
  return x_;
}
inline void Pose2D::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Pose2D.x)
}

// required float y = 3;
inline bool Pose2D::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pose2D::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pose2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pose2D::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Pose2D::y() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Pose2D.y)
  return y_;
}
inline void Pose2D::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Pose2D.y)
}

// required float ori = 4;
inline bool Pose2D::has_ori() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Pose2D::set_has_ori() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Pose2D::clear_has_ori() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Pose2D::clear_ori() {
  ori_ = 0;
  clear_has_ori();
}
inline float Pose2D::ori() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.Pose2D.ori)
  return ori_;
}
inline void Pose2D::set_ori(float value) {
  set_has_ori();
  ori_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.Pose2D.ori)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Pose2D_2eproto
