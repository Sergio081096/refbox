// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExplorationInfo.proto

#ifndef PROTOBUF_INCLUDED_ExplorationInfo_2eproto
#define PROTOBUF_INCLUDED_ExplorationInfo_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MachineInfo.pb.h"
#include "Team.pb.h"
#include "Zone.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ExplorationInfo_2eproto 

namespace protobuf_ExplorationInfo_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ExplorationInfo_2eproto
namespace llsf_msgs {
class ExplorationInfo;
class ExplorationInfoDefaultTypeInternal;
extern ExplorationInfoDefaultTypeInternal _ExplorationInfo_default_instance_;
class ExplorationSignal;
class ExplorationSignalDefaultTypeInternal;
extern ExplorationSignalDefaultTypeInternal _ExplorationSignal_default_instance_;
class ExplorationZone;
class ExplorationZoneDefaultTypeInternal;
extern ExplorationZoneDefaultTypeInternal _ExplorationZone_default_instance_;
}  // namespace llsf_msgs
namespace google {
namespace protobuf {
template<> ::llsf_msgs::ExplorationInfo* Arena::CreateMaybeMessage<::llsf_msgs::ExplorationInfo>(Arena*);
template<> ::llsf_msgs::ExplorationSignal* Arena::CreateMaybeMessage<::llsf_msgs::ExplorationSignal>(Arena*);
template<> ::llsf_msgs::ExplorationZone* Arena::CreateMaybeMessage<::llsf_msgs::ExplorationZone>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace llsf_msgs {

enum ExplorationSignal_CompType {
  ExplorationSignal_CompType_COMP_ID = 2000,
  ExplorationSignal_CompType_MSG_TYPE = 70
};
bool ExplorationSignal_CompType_IsValid(int value);
const ExplorationSignal_CompType ExplorationSignal_CompType_CompType_MIN = ExplorationSignal_CompType_MSG_TYPE;
const ExplorationSignal_CompType ExplorationSignal_CompType_CompType_MAX = ExplorationSignal_CompType_COMP_ID;
const int ExplorationSignal_CompType_CompType_ARRAYSIZE = ExplorationSignal_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExplorationSignal_CompType_descriptor();
inline const ::std::string& ExplorationSignal_CompType_Name(ExplorationSignal_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExplorationSignal_CompType_descriptor(), value);
}
inline bool ExplorationSignal_CompType_Parse(
    const ::std::string& name, ExplorationSignal_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExplorationSignal_CompType>(
    ExplorationSignal_CompType_descriptor(), name, value);
}
enum ExplorationZone_CompType {
  ExplorationZone_CompType_COMP_ID = 2000,
  ExplorationZone_CompType_MSG_TYPE = 71
};
bool ExplorationZone_CompType_IsValid(int value);
const ExplorationZone_CompType ExplorationZone_CompType_CompType_MIN = ExplorationZone_CompType_MSG_TYPE;
const ExplorationZone_CompType ExplorationZone_CompType_CompType_MAX = ExplorationZone_CompType_COMP_ID;
const int ExplorationZone_CompType_CompType_ARRAYSIZE = ExplorationZone_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExplorationZone_CompType_descriptor();
inline const ::std::string& ExplorationZone_CompType_Name(ExplorationZone_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExplorationZone_CompType_descriptor(), value);
}
inline bool ExplorationZone_CompType_Parse(
    const ::std::string& name, ExplorationZone_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExplorationZone_CompType>(
    ExplorationZone_CompType_descriptor(), name, value);
}
enum ExplorationInfo_CompType {
  ExplorationInfo_CompType_COMP_ID = 2000,
  ExplorationInfo_CompType_MSG_TYPE = 72
};
bool ExplorationInfo_CompType_IsValid(int value);
const ExplorationInfo_CompType ExplorationInfo_CompType_CompType_MIN = ExplorationInfo_CompType_MSG_TYPE;
const ExplorationInfo_CompType ExplorationInfo_CompType_CompType_MAX = ExplorationInfo_CompType_COMP_ID;
const int ExplorationInfo_CompType_CompType_ARRAYSIZE = ExplorationInfo_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExplorationInfo_CompType_descriptor();
inline const ::std::string& ExplorationInfo_CompType_Name(ExplorationInfo_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExplorationInfo_CompType_descriptor(), value);
}
inline bool ExplorationInfo_CompType_Parse(
    const ::std::string& name, ExplorationInfo_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExplorationInfo_CompType>(
    ExplorationInfo_CompType_descriptor(), name, value);
}
// ===================================================================

class ExplorationSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.ExplorationSignal) */ {
 public:
  ExplorationSignal();
  virtual ~ExplorationSignal();

  ExplorationSignal(const ExplorationSignal& from);

  inline ExplorationSignal& operator=(const ExplorationSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplorationSignal(ExplorationSignal&& from) noexcept
    : ExplorationSignal() {
    *this = ::std::move(from);
  }

  inline ExplorationSignal& operator=(ExplorationSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplorationSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplorationSignal* internal_default_instance() {
    return reinterpret_cast<const ExplorationSignal*>(
               &_ExplorationSignal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ExplorationSignal* other);
  friend void swap(ExplorationSignal& a, ExplorationSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplorationSignal* New() const final {
    return CreateMaybeMessage<ExplorationSignal>(NULL);
  }

  ExplorationSignal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplorationSignal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplorationSignal& from);
  void MergeFrom(const ExplorationSignal& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplorationSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExplorationSignal_CompType CompType;
  static const CompType COMP_ID =
    ExplorationSignal_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    ExplorationSignal_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return ExplorationSignal_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    ExplorationSignal_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    ExplorationSignal_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    ExplorationSignal_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return ExplorationSignal_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return ExplorationSignal_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return ExplorationSignal_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .llsf_msgs.LightSpec lights = 2;
  int lights_size() const;
  void clear_lights();
  static const int kLightsFieldNumber = 2;
  ::llsf_msgs::LightSpec* mutable_lights(int index);
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::LightSpec >*
      mutable_lights();
  const ::llsf_msgs::LightSpec& lights(int index) const;
  ::llsf_msgs::LightSpec* add_lights();
  const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::LightSpec >&
      lights() const;

  // required string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:llsf_msgs.ExplorationSignal)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::LightSpec > lights_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  friend struct ::protobuf_ExplorationInfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExplorationZone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.ExplorationZone) */ {
 public:
  ExplorationZone();
  virtual ~ExplorationZone();

  ExplorationZone(const ExplorationZone& from);

  inline ExplorationZone& operator=(const ExplorationZone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplorationZone(ExplorationZone&& from) noexcept
    : ExplorationZone() {
    *this = ::std::move(from);
  }

  inline ExplorationZone& operator=(ExplorationZone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplorationZone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplorationZone* internal_default_instance() {
    return reinterpret_cast<const ExplorationZone*>(
               &_ExplorationZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ExplorationZone* other);
  friend void swap(ExplorationZone& a, ExplorationZone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplorationZone* New() const final {
    return CreateMaybeMessage<ExplorationZone>(NULL);
  }

  ExplorationZone* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplorationZone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplorationZone& from);
  void MergeFrom(const ExplorationZone& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplorationZone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExplorationZone_CompType CompType;
  static const CompType COMP_ID =
    ExplorationZone_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    ExplorationZone_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return ExplorationZone_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    ExplorationZone_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    ExplorationZone_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    ExplorationZone_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return ExplorationZone_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return ExplorationZone_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return ExplorationZone_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .llsf_msgs.Team team_color = 3;
  bool has_team_color() const;
  void clear_team_color();
  static const int kTeamColorFieldNumber = 3;
  ::llsf_msgs::Team team_color() const;
  void set_team_color(::llsf_msgs::Team value);

  // required .llsf_msgs.Zone zone = 2;
  bool has_zone() const;
  void clear_zone();
  static const int kZoneFieldNumber = 2;
  ::llsf_msgs::Zone zone() const;
  void set_zone(::llsf_msgs::Zone value);

  // @@protoc_insertion_point(class_scope:llsf_msgs.ExplorationZone)
 private:
  void set_has_zone();
  void clear_has_zone();
  void set_has_team_color();
  void clear_has_team_color();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int team_color_;
  int zone_;
  friend struct ::protobuf_ExplorationInfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExplorationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:llsf_msgs.ExplorationInfo) */ {
 public:
  ExplorationInfo();
  virtual ~ExplorationInfo();

  ExplorationInfo(const ExplorationInfo& from);

  inline ExplorationInfo& operator=(const ExplorationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExplorationInfo(ExplorationInfo&& from) noexcept
    : ExplorationInfo() {
    *this = ::std::move(from);
  }

  inline ExplorationInfo& operator=(ExplorationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExplorationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExplorationInfo* internal_default_instance() {
    return reinterpret_cast<const ExplorationInfo*>(
               &_ExplorationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ExplorationInfo* other);
  friend void swap(ExplorationInfo& a, ExplorationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExplorationInfo* New() const final {
    return CreateMaybeMessage<ExplorationInfo>(NULL);
  }

  ExplorationInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExplorationInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExplorationInfo& from);
  void MergeFrom(const ExplorationInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExplorationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExplorationInfo_CompType CompType;
  static const CompType COMP_ID =
    ExplorationInfo_CompType_COMP_ID;
  static const CompType MSG_TYPE =
    ExplorationInfo_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return ExplorationInfo_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    ExplorationInfo_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    ExplorationInfo_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    ExplorationInfo_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return ExplorationInfo_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return ExplorationInfo_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return ExplorationInfo_CompType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .llsf_msgs.ExplorationSignal signals = 1;
  int signals_size() const;
  void clear_signals();
  static const int kSignalsFieldNumber = 1;
  ::llsf_msgs::ExplorationSignal* mutable_signals(int index);
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationSignal >*
      mutable_signals();
  const ::llsf_msgs::ExplorationSignal& signals(int index) const;
  ::llsf_msgs::ExplorationSignal* add_signals();
  const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationSignal >&
      signals() const;

  // repeated .llsf_msgs.ExplorationZone zones = 2;
  int zones_size() const;
  void clear_zones();
  static const int kZonesFieldNumber = 2;
  ::llsf_msgs::ExplorationZone* mutable_zones(int index);
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationZone >*
      mutable_zones();
  const ::llsf_msgs::ExplorationZone& zones(int index) const;
  ::llsf_msgs::ExplorationZone* add_zones();
  const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationZone >&
      zones() const;

  // @@protoc_insertion_point(class_scope:llsf_msgs.ExplorationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationSignal > signals_;
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationZone > zones_;
  friend struct ::protobuf_ExplorationInfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExplorationSignal

// required string type = 1;
inline bool ExplorationSignal::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExplorationSignal::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExplorationSignal::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExplorationSignal::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& ExplorationSignal::type() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ExplorationSignal.type)
  return type_.GetNoArena();
}
inline void ExplorationSignal::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:llsf_msgs.ExplorationSignal.type)
}
#if LANG_CXX11
inline void ExplorationSignal::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:llsf_msgs.ExplorationSignal.type)
}
#endif
inline void ExplorationSignal::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:llsf_msgs.ExplorationSignal.type)
}
inline void ExplorationSignal::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:llsf_msgs.ExplorationSignal.type)
}
inline ::std::string* ExplorationSignal::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:llsf_msgs.ExplorationSignal.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExplorationSignal::release_type() {
  // @@protoc_insertion_point(field_release:llsf_msgs.ExplorationSignal.type)
  if (!has_type()) {
    return NULL;
  }
  clear_has_type();
  return type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExplorationSignal::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:llsf_msgs.ExplorationSignal.type)
}

// repeated .llsf_msgs.LightSpec lights = 2;
inline int ExplorationSignal::lights_size() const {
  return lights_.size();
}
inline ::llsf_msgs::LightSpec* ExplorationSignal::mutable_lights(int index) {
  // @@protoc_insertion_point(field_mutable:llsf_msgs.ExplorationSignal.lights)
  return lights_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::LightSpec >*
ExplorationSignal::mutable_lights() {
  // @@protoc_insertion_point(field_mutable_list:llsf_msgs.ExplorationSignal.lights)
  return &lights_;
}
inline const ::llsf_msgs::LightSpec& ExplorationSignal::lights(int index) const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ExplorationSignal.lights)
  return lights_.Get(index);
}
inline ::llsf_msgs::LightSpec* ExplorationSignal::add_lights() {
  // @@protoc_insertion_point(field_add:llsf_msgs.ExplorationSignal.lights)
  return lights_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::LightSpec >&
ExplorationSignal::lights() const {
  // @@protoc_insertion_point(field_list:llsf_msgs.ExplorationSignal.lights)
  return lights_;
}

// -------------------------------------------------------------------

// ExplorationZone

// required .llsf_msgs.Zone zone = 2;
inline bool ExplorationZone::has_zone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExplorationZone::set_has_zone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExplorationZone::clear_has_zone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExplorationZone::clear_zone() {
  zone_ = 18;
  clear_has_zone();
}
inline ::llsf_msgs::Zone ExplorationZone::zone() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ExplorationZone.zone)
  return static_cast< ::llsf_msgs::Zone >(zone_);
}
inline void ExplorationZone::set_zone(::llsf_msgs::Zone value) {
  assert(::llsf_msgs::Zone_IsValid(value));
  set_has_zone();
  zone_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.ExplorationZone.zone)
}

// required .llsf_msgs.Team team_color = 3;
inline bool ExplorationZone::has_team_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExplorationZone::set_has_team_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExplorationZone::clear_has_team_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExplorationZone::clear_team_color() {
  team_color_ = 0;
  clear_has_team_color();
}
inline ::llsf_msgs::Team ExplorationZone::team_color() const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ExplorationZone.team_color)
  return static_cast< ::llsf_msgs::Team >(team_color_);
}
inline void ExplorationZone::set_team_color(::llsf_msgs::Team value) {
  assert(::llsf_msgs::Team_IsValid(value));
  set_has_team_color();
  team_color_ = value;
  // @@protoc_insertion_point(field_set:llsf_msgs.ExplorationZone.team_color)
}

// -------------------------------------------------------------------

// ExplorationInfo

// repeated .llsf_msgs.ExplorationSignal signals = 1;
inline int ExplorationInfo::signals_size() const {
  return signals_.size();
}
inline void ExplorationInfo::clear_signals() {
  signals_.Clear();
}
inline ::llsf_msgs::ExplorationSignal* ExplorationInfo::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:llsf_msgs.ExplorationInfo.signals)
  return signals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationSignal >*
ExplorationInfo::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:llsf_msgs.ExplorationInfo.signals)
  return &signals_;
}
inline const ::llsf_msgs::ExplorationSignal& ExplorationInfo::signals(int index) const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ExplorationInfo.signals)
  return signals_.Get(index);
}
inline ::llsf_msgs::ExplorationSignal* ExplorationInfo::add_signals() {
  // @@protoc_insertion_point(field_add:llsf_msgs.ExplorationInfo.signals)
  return signals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationSignal >&
ExplorationInfo::signals() const {
  // @@protoc_insertion_point(field_list:llsf_msgs.ExplorationInfo.signals)
  return signals_;
}

// repeated .llsf_msgs.ExplorationZone zones = 2;
inline int ExplorationInfo::zones_size() const {
  return zones_.size();
}
inline void ExplorationInfo::clear_zones() {
  zones_.Clear();
}
inline ::llsf_msgs::ExplorationZone* ExplorationInfo::mutable_zones(int index) {
  // @@protoc_insertion_point(field_mutable:llsf_msgs.ExplorationInfo.zones)
  return zones_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationZone >*
ExplorationInfo::mutable_zones() {
  // @@protoc_insertion_point(field_mutable_list:llsf_msgs.ExplorationInfo.zones)
  return &zones_;
}
inline const ::llsf_msgs::ExplorationZone& ExplorationInfo::zones(int index) const {
  // @@protoc_insertion_point(field_get:llsf_msgs.ExplorationInfo.zones)
  return zones_.Get(index);
}
inline ::llsf_msgs::ExplorationZone* ExplorationInfo::add_zones() {
  // @@protoc_insertion_point(field_add:llsf_msgs.ExplorationInfo.zones)
  return zones_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::ExplorationZone >&
ExplorationInfo::zones() const {
  // @@protoc_insertion_point(field_list:llsf_msgs.ExplorationInfo.zones)
  return zones_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_msgs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::llsf_msgs::ExplorationSignal_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::ExplorationSignal_CompType>() {
  return ::llsf_msgs::ExplorationSignal_CompType_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::ExplorationZone_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::ExplorationZone_CompType>() {
  return ::llsf_msgs::ExplorationZone_CompType_descriptor();
}
template <> struct is_proto_enum< ::llsf_msgs::ExplorationInfo_CompType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::ExplorationInfo_CompType>() {
  return ::llsf_msgs::ExplorationInfo_CompType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ExplorationInfo_2eproto
